/*! For license information please see taskpane.js.LICENSE.txt */
!function(){"use strict";var e={98362:function(e,t,r){e.exports=r.p+"assets/logo-filled.png"},81499:function(e,t,r){e.exports=r.p+"24477b26611d6c45fc13.css"},58394:function(e,t,r){e.exports=r.p+"1fda685b81e1123773f6.css"}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}r.m=e,r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e}(),r.b=document.baseURI||self.location.href,function(){const e={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},t=[e.OPENID_SCOPE,e.PROFILE_SCOPE,e.OFFLINE_ACCESS_SCOPE],r=[...t,e.EMAIL_SCOPE],n="Retry-After",o="X-AnchorMailbox",i="x-ms-request-id",a="idtoken",s="client.info",c="adal.idtoken",h="error",l="error.description",d="active-account",u="active-account-filters",g="common",p="organizations",m="consumers",f="access_token",y={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},C={PLAIN:"plain",S256:"S256"},v={QUERY:"query",FRAGMENT:"fragment"},w={...v,FORM_POST:"form_post"},I="Generic",T={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},A={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},k="appmetadata",S="1",b="authority-metadata",R="config",E="cache",_="network",P="hardcoded_values",M={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},O={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},q="throttling";var N;!function(e){e[e.Error=0]="Error",e[e.Warning=1]="Warning",e[e.Info=2]="Info",e[e.Verbose=3]="Verbose",e[e.Trace=4]="Trace"}(N||(N={}));class H{constructor(t,r,n){this.level=N.Info;const o=t||H.createDefaultLoggerOptions();this.localCallback=o.loggerCallback||(()=>{}),this.piiLoggingEnabled=o.piiLoggingEnabled||!1,this.level="number"==typeof o.logLevel?o.logLevel:N.Info,this.correlationId=o.correlationId||e.EMPTY_STRING,this.packageName=r||e.EMPTY_STRING,this.packageVersion=n||e.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:N.Info}}clone(e,t,r){return new H({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}] : ${this.packageName}@${this.packageVersion} : ${N[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(t,r){this.logMessage(t,{logLevel:N.Error,containsPii:!1,correlationId:r||e.EMPTY_STRING})}errorPii(t,r){this.logMessage(t,{logLevel:N.Error,containsPii:!0,correlationId:r||e.EMPTY_STRING})}warning(t,r){this.logMessage(t,{logLevel:N.Warning,containsPii:!1,correlationId:r||e.EMPTY_STRING})}warningPii(t,r){this.logMessage(t,{logLevel:N.Warning,containsPii:!0,correlationId:r||e.EMPTY_STRING})}info(t,r){this.logMessage(t,{logLevel:N.Info,containsPii:!1,correlationId:r||e.EMPTY_STRING})}infoPii(t,r){this.logMessage(t,{logLevel:N.Info,containsPii:!0,correlationId:r||e.EMPTY_STRING})}verbose(t,r){this.logMessage(t,{logLevel:N.Verbose,containsPii:!1,correlationId:r||e.EMPTY_STRING})}verbosePii(t,r){this.logMessage(t,{logLevel:N.Verbose,containsPii:!0,correlationId:r||e.EMPTY_STRING})}trace(t,r){this.logMessage(t,{logLevel:N.Trace,containsPii:!1,correlationId:r||e.EMPTY_STRING})}tracePii(t,r){this.logMessage(t,{logLevel:N.Trace,containsPii:!0,correlationId:r||e.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}const x="AAD",U="OIDC",L="none",B="unexpected_error",D="post_request_failed",F={[B]:"Unexpected error in authentication.",[D]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class K extends Error{constructor(t,r,n){super(r?`${t}: ${r}`:t),Object.setPrototypeOf(this,K.prototype),this.errorCode=t||e.EMPTY_STRING,this.errorMessage=r||e.EMPTY_STRING,this.subError=n||e.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function z(e,t){return new K(e,t?`${F[e]} ${t}`:F[e])}const $="client_info_decoding_error",G="client_info_empty_error",W="token_parsing_error",j="null_or_empty_token",Q="endpoints_resolution_error",V="network_error",Y="openid_config_error",J="hash_not_deserialized",X="invalid_state",Z="state_mismatch",ee="state_not_found",te="nonce_mismatch",re="auth_time_not_found",ne="max_age_transpired",oe="multiple_matching_tokens",ie="multiple_matching_accounts",ae="multiple_matching_appMetadata",se="request_cannot_be_made",ce="cannot_remove_empty_scope",he="cannot_append_scopeset",le="empty_input_scopeset",de="device_code_polling_cancelled",ue="device_code_expired",ge="device_code_unknown_error",pe="no_account_in_silent_request",me="invalid_cache_record",fe="invalid_cache_environment",ye="no_account_found",Ce="no_crypto_object",ve="unexpected_credential_type",we="invalid_assertion",Ie="invalid_client_credential",Te="token_refresh_required",Ae="user_timeout_reached",ke="token_claims_cnf_required_for_signedjwt",Se="authorization_code_missing_from_server_response",be="binding_key_not_removed",Re="end_session_endpoint_not_supported",Ee="key_id_missing",_e="no_network_connectivity",Pe="user_canceled",Me="missing_tenant_id_error",Oe="method_not_implemented",qe="nested_app_auth_bridge_disabled",Ne={[$]:"The client info could not be parsed/decoded correctly",[G]:"The client info was empty",[W]:"Token cannot be parsed",[j]:"The token is null or empty",[Q]:"Endpoints cannot be resolved",[V]:"Network request failed",[Y]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[J]:"The hash parameters could not be deserialized",[X]:"State was not the expected format",[Z]:"State mismatch error",[ee]:"State not found",[te]:"Nonce mismatch error",[re]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[ne]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[oe]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[ie]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[ae]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[se]:"Token request cannot be made without authorization code or refresh token.",[ce]:"Cannot remove null or empty scope from ScopeSet",[he]:"Cannot append ScopeSet",[le]:"Empty input ScopeSet cannot be processed",[de]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[ue]:"Device code is expired.",[ge]:"Device code stopped polling for unknown reasons.",[pe]:"Please pass an account object, silent flow is not supported without account information",[me]:"Cache record object was null or undefined.",[fe]:"Invalid environment when attempting to create cache entry",[ye]:"No account found in cache for given key.",[Ce]:"No crypto object detected.",[ve]:"Unexpected credential type.",[we]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[Ie]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[Te]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[Ae]:"User defined timeout for device code polling reached",[ke]:"Cannot generate a POP jwt if the token_claims are not populated",[Se]:"Server response does not contain an authorization code to proceed",[be]:"Could not remove the credential's binding key from storage.",[Re]:"The provided authority does not support logout",[Ee]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[_e]:"No network connectivity. Check your internet connection.",[Pe]:"User cancelled the flow.",[Me]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[Oe]:"This method has not been implemented",[qe]:"The nested app auth bridge is disabled"};class He extends K{constructor(e,t){super(e,t?`${Ne[e]}: ${t}`:Ne[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,He.prototype)}}function xe(e,t){return new He(e,t)}const Ue={createNewGuid:()=>{throw xe(Oe)},base64Decode:()=>{throw xe(Oe)},base64Encode:()=>{throw xe(Oe)},base64UrlEncode:()=>{throw xe(Oe)},encodeKid:()=>{throw xe(Oe)},async getPublicKeyThumbprint(){throw xe(Oe)},async removeTokenBindingKey(){throw xe(Oe)},async clearKeystore(){throw xe(Oe)},async signJwt(){throw xe(Oe)},async hashString(){throw xe(Oe)}},Le="@azure/msal-common",Be="14.15.0";function De(e,t){const r=function(e){if(!e)throw xe(j);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw xe(W);return t[2]}(e);try{const e=t(r);return JSON.parse(e)}catch(e){throw xe(W)}}function Fe(e,t){if(0===t||Date.now()-3e5>e+t)throw xe(ne)}function Ke(){return Math.round((new Date).getTime()/1e3)}function ze(e,t){const r=Number(e)||0;return Ke()+t>r}function $e(e){return Number(e)>Ke()}function Ge(e){return[Ze(e),et(e),tt(e),rt(e),nt(e)].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}function We(e,t,r,n,o){return{credentialType:A.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:o}}function je(e,t,r,n,o,i,a,s,c,h,l,d,u,g,p){const m={homeAccountId:e,credentialType:A.ACCESS_TOKEN,secret:r,cachedAt:Ke().toString(),expiresOn:a.toString(),extendedExpiresOn:s.toString(),environment:t,clientId:n,realm:o,target:i,tokenType:l||O.BEARER};if(d&&(m.userAssertionHash=d),h&&(m.refreshOn=h.toString()),g&&(m.requestedClaims=g,m.requestedClaimsHash=p),m.tokenType?.toLowerCase()!==O.BEARER.toLowerCase())switch(m.credentialType=A.ACCESS_TOKEN_WITH_AUTH_SCHEME,m.tokenType){case O.POP:const e=De(r,c);if(!e?.cnf?.kid)throw xe(ke);m.keyId=e.cnf.kid;break;case O.SSH:m.keyId=u}return m}function Qe(e,t,r,n,o,i,a){const s={credentialType:A.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r};return i&&(s.userAssertionHash=i),o&&(s.familyId=o),a&&(s.expiresOn=a.toString()),s}function Ve(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function Ye(e){return!!e&&Ve(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===A.ACCESS_TOKEN||e.credentialType===A.ACCESS_TOKEN_WITH_AUTH_SCHEME)}function Je(e){return!!e&&Ve(e)&&e.hasOwnProperty("realm")&&e.credentialType===A.ID_TOKEN}function Xe(e){return!!e&&Ve(e)&&e.credentialType===A.REFRESH_TOKEN}function Ze(e){return[e.homeAccountId,e.environment].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}function et(e){const t=e.credentialType===A.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}function tt(e){return(e.target||"").toLowerCase()}function rt(e){return(e.requestedClaimsHash||"").toLowerCase()}function nt(e){return e.tokenType&&e.tokenType.toLowerCase()!==O.BEARER.toLowerCase()?e.tokenType.toLowerCase():""}function ot(){return Ke()+86400}function it(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function at(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function st(e){return e.expiresAt<=Ke()}const ct="redirect_uri_empty",ht="claims_request_parsing_error",lt="authority_uri_insecure",dt="url_parse_error",ut="empty_url_error",gt="empty_input_scopes_error",pt="invalid_prompt_value",mt="invalid_claims",ft="token_request_empty",yt="logout_request_empty",Ct="invalid_code_challenge_method",vt="pkce_params_missing",wt="invalid_cloud_discovery_metadata",It="invalid_authority_metadata",Tt="untrusted_authority",At="missing_ssh_jwk",kt="missing_ssh_kid",St="missing_nonce_authentication_header",bt="invalid_authentication_header",Rt="cannot_set_OIDCOptions",Et="cannot_allow_native_broker",_t="authority_mismatch",Pt={[ct]:"A redirect URI is required for all calls, and none has been set.",[ht]:"Could not parse the given claims request object.",[lt]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[dt]:"URL could not be parsed into appropriate segments.",[ut]:"URL was empty or null.",[gt]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[pt]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[mt]:"Given claims parameter must be a stringified JSON object.",[ft]:"Token request was empty and not found in cache.",[yt]:"The logout request was null or undefined.",[Ct]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[vt]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[wt]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[It]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[Tt]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[At]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[kt]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[St]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[bt]:"Invalid authentication header provided",[Rt]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Et]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[_t]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class Mt extends K{constructor(e){super(e,Pt[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Mt.prototype)}}function Ot(e){return new Mt(e)}class qt{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach((e=>{if(e.trim()){const[r,o]=e.split(/=(.+)/g,2);r&&o&&(t[n(r)]=n(o))}})),t}static trimArrayEntries(e){return e.map((e=>e.trim()))}static removeEmptyStringsFromArray(e){return e.filter((e=>!!e))}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}class Nt{constructor(e){const t=e?qt.trimArrayEntries([...e]):[],r=t?qt.removeEmptyStringsFromArray(t):[];this.validateInputScopes(r),this.scopes=new Set,r.forEach((e=>this.scopes.add(e)))}static fromString(t){const r=(t||e.EMPTY_STRING).split(" ");return new Nt(r)}static createSearchScopes(t){const r=new Nt(t);return r.containsOnlyOIDCScopes()?r.removeScope(e.OFFLINE_ACCESS_SCOPE):r.removeOIDCScopes(),r}validateInputScopes(e){if(!e||e.length<1)throw Ot(gt)}containsScope(e){const t=this.printScopesLowerCase().split(" "),r=new Nt(t);return!!e&&r.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every((e=>this.containsScope(e)))}containsOnlyOIDCScopes(){let e=0;return r.forEach((t=>{this.containsScope(t)&&(e+=1)})),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach((e=>this.appendScope(e)))}catch(e){throw xe(he)}}removeScope(e){if(!e)throw xe(ce);this.scopes.delete(e.trim())}removeOIDCScopes(){r.forEach((e=>{this.scopes.delete(e)}))}unionScopeSets(e){if(!e)throw xe(le);const t=new Set;return e.scopes.forEach((e=>t.add(e.toLowerCase()))),this.scopes.forEach((e=>t.add(e.toLowerCase()))),t}intersectingScopeSets(e){if(!e)throw xe(le);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach((t=>e.push(t))),e}printScopes(){return this.scopes?this.asArray().join(" "):e.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function Ht(e,t){if(!e)throw xe(G);try{const r=t(e);return JSON.parse(r)}catch(e){throw xe($)}}function xt(t){if(!t)throw xe($);const r=t.split(T.CLIENT_INFO_SEPARATOR,2);return{uid:r[0],utid:r.length<2?e.EMPTY_STRING:r[1]}}function Ut(e,t){return!!e&&!!t&&e===t.split(".")[1]}function Lt(e,t,r,n){if(n){const{oid:t,sub:r,tid:o,name:i,tfp:a,acr:s}=n,c=o||a||s||"";return{tenantId:c,localAccountId:t||r||"",name:i,isHomeTenant:Ut(c,e)}}return{tenantId:r,localAccountId:t,isHomeTenant:Ut(r,e)}}function Bt(e,t,r,n){let o=e;if(t){const{isHomeTenant:r,...n}=t;o={...e,...n}}if(r){const{isHomeTenant:t,...i}=Lt(e.homeAccountId,e.localAccountId,e.tenantId,r);return o={...o,...i,idTokenClaims:r,idToken:n},o}return o}function Dt(e){return e&&(e.tid||e.tfp||e.acr)||null}class Ft{generateAccountId(){return[this.homeAccountId,this.environment].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return Ft.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map((e=>[e.tenantId,e])))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,r){const n=new Ft;let o;1===t.authorityType?n.authorityType="ADFS":t.protocolMode===x?n.authorityType="MSSTS":n.authorityType=I,e.clientInfo&&r&&(o=Ht(e.clientInfo,r)),n.clientInfo=e.clientInfo,n.homeAccountId=e.homeAccountId,n.nativeAccountId=e.nativeAccountId;const i=e.environment||t&&t.getPreferredCache();if(!i)throw xe(fe);n.environment=i,n.realm=o?.utid||Dt(e.idTokenClaims)||"",n.localAccountId=o?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const a=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,s=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(n.username=a||s||"",n.name=e.idTokenClaims?.name||"",n.cloudGraphHostName=e.cloudGraphHostName,n.msGraphHost=e.msGraphHost,e.tenantProfiles)n.tenantProfiles=e.tenantProfiles;else{const t=Lt(e.homeAccountId,n.localAccountId,n.realm,e.idTokenClaims);n.tenantProfiles=[t]}return n}static createFromAccountInfo(e,t,r){const n=new Ft;return n.authorityType=e.authorityType||I,n.homeAccountId=e.homeAccountId,n.localAccountId=e.localAccountId,n.nativeAccountId=e.nativeAccountId,n.realm=e.tenantId,n.environment=e.environment,n.username=e.username,n.name=e.name,n.cloudGraphHostName=t,n.msGraphHost=r,n.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),n}static generateHomeAccountId(e,t,r,n,o){if(1!==t&&2!==t){if(e)try{const t=Ht(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return o?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){const r=e.idTokenClaims||{},o=t.idTokenClaims||{};n=r.iat===o.iat&&r.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}function Kt(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function zt(e){if(!e||e.indexOf("=")<0)return null;try{const t=Kt(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.error||r.error_description||r.state)return r}catch(e){throw xe(J)}return null}class $t{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw Ot(ut);e.includes("#")||(this._urlString=$t.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return qt.endsWith(t,"?")?t=t.slice(0,-1):qt.endsWith(t,"?/")&&(t=t.slice(0,-2)),qt.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw Ot(dt)}if(!e.HostNameAndPort||!e.PathSegments)throw Ot(dt);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw Ot(lt)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return $t.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),r=t.PathSegments;return!e||0===r.length||r[0]!==g&&r[0]!==p||(r[0]=e),$t.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw Ot(dt);const r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let n=r.AbsolutePath.split("/");return n=n.filter((e=>e&&e.length>0)),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw Ot(dt);return r[2]}static getAbsoluteUrl(t,r){if(t[0]===e.FORWARD_SLASH){const e=new $t(r).getUrlComponents();return e.Protocol+"//"+e.HostNameAndPort+t}return t}static constructAuthorityUriFromObject(e){return new $t(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!zt(e)}}const Gt={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},Wt={tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},jt=new Set;function Qt(e,t,r,n){if(n?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){const o=Vt(t,e);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function Vt(e,t){for(let r=0;r<e.length;r++){const n=e[r];if(n.aliases.includes(t))return n}return null}Wt.metadata.forEach((e=>{e.aliases.forEach((e=>{jt.add(e)}))}));const Yt="cache_quota_exceeded",Jt="cache_error_unknown",Xt={[Yt]:"Exceeded cache storage capacity.",[Jt]:"Unexpected error occurred when using cache storage."};class Zt extends Error{constructor(e,t){const r=t||(Xt[e]?Xt[e]:Xt[Jt]);super(`${e}: ${r}`),Object.setPrototypeOf(this,Zt.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}class er{constructor(e,t,r,n){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(Le,Be),this.staticAuthorityOptions=n}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort((e=>e.idTokenClaims?-1:1))[0]:1===t.length?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap((e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t)))}getTenantedAccountInfoByFilter(e,t,r,n){let o,i=null;if(n&&!this.tenantProfileMatchesFilter(r,n))return null;const a=this.getIdToken(e,t,r.tenantId);return a&&(o=De(a.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(o,n))?null:(i=Bt(e,r,o,a?.secret),i)}getTenantProfilesFromAccountEntity(e,t,r){const n=e.getAccountInfo();let o=n.tenantProfiles||new Map;const i=this.getTokenKeys();if(t){const e=o.get(t);if(!e)return[];o=new Map([[t,e]])}const a=[];return o.forEach((e=>{const t=this.getTenantedAccountInfoByFilter(n,i,e,r);t&&a.push(t)})),a}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||void 0!==t.isHomeTenant&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,r){if(!e)throw xe(me);try{e.account&&this.setAccount(e.account),e.idToken&&!1!==t?.idToken&&this.setIdTokenCredential(e.idToken),e.accessToken&&!1!==t?.accessToken&&await this.saveAccessToken(e.accessToken),e.refreshToken&&!1!==t?.refreshToken&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error?(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,r),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?(this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",r),new Zt(Yt)):new Zt(e.name,e.message)):(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,r),new Zt(Jt))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},r=this.getTokenKeys(),n=Nt.fromString(e.target),o=[];r.accessToken.forEach((e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;const r=this.getAccessTokenCredential(e);r&&this.credentialMatchesFilter(r,t)&&Nt.fromString(r.target).intersectingScopeSets(n)&&o.push(this.removeAccessToken(e))})),await Promise.all(o),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),r=[];return t.forEach((t=>{if(!this.isAccountKey(t,e.homeAccountId))return;const n=this.getAccount(t,this.commonLogger);if(!n)return;if(e.homeAccountId&&!this.matchHomeAccountId(n,e.homeAccountId))return;if(e.username&&!this.matchUsername(n.username,e.username))return;if(e.environment&&!this.matchEnvironment(n,e.environment))return;if(e.realm&&!this.matchRealm(n,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(n,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(n,e.authorityType))return;const o={localAccountId:e?.localAccountId,name:e?.name},i=n.tenantProfiles?.filter((e=>this.tenantProfileMatchesFilter(e,o)));i&&0===i.length||r.push(n)})),r}isAccountKey(e,t,r){return!(e.split(T.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||r&&!e.toLowerCase().includes(r.toLowerCase()))}isCredentialKey(e){if(e.split(T.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(A.ID_TOKEN.toLowerCase())&&-1===t.indexOf(A.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(A.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(A.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(A.REFRESH_TOKEN.toLowerCase())>-1){const e=`${A.REFRESH_TOKEN}${T.CACHE_KEY_SEPARATOR}${this.clientId}${T.CACHE_KEY_SEPARATOR}`,r=`${A.REFRESH_TOKEN}${T.CACHE_KEY_SEPARATOR}${S}${T.CACHE_KEY_SEPARATOR}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===A.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===O.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),r={};return t.forEach((t=>{if(!this.isAppMetadata(t))return;const n=this.getAppMetadata(t);n&&(e.environment&&!this.matchEnvironment(n,e.environment)||e.clientId&&!this.matchClientId(n,e.clientId)||(r[t]=n))})),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let r=null;return t.forEach((t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)})),r}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach((e=>{t.push(this.removeAccount(e))})),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),r=e.generateAccountId(),n=[];t.idToken.forEach((e=>{0===e.indexOf(r)&&this.removeIdToken(e)})),t.accessToken.forEach((e=>{0===e.indexOf(r)&&n.push(this.removeAccessToken(e))})),t.refreshToken.forEach((e=>{0===e.indexOf(r)&&this.removeRefreshToken(e)})),await Promise.all(n)}updateOutdatedCachedAccount(e,t,r){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const n=this.getAccountKeys().filter((e=>e.startsWith(t.homeAccountId))),o=[];n.forEach((e=>{const t=this.getCachedAccountEntity(e);t&&o.push(t)}));const i=o.find((e=>Ut(e.realm,e.homeAccountId)))||o[0];i.tenantProfiles=o.map((e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:Ut(e.realm,e.homeAccountId)})));const a=er.toObject(new Ft,{...i}),s=a.generateAccountKey();return n.forEach((t=>{t!==s&&this.removeOutdatedAccount(e)})),this.setAccount(a),r?.verbose("Updated an outdated account entity in the cache"),a}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===A.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===O.POP){const e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw xe(be)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach((e=>{this.isAppMetadata(e)&&this.removeItem(e)})),!0}readAccountFromCache(e){const t=Ft.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:A.ID_TOKEN,clientId:this.clientId,realm:r},a=this.getIdTokensByFilter(i,t),s=a.size;if(s<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(s>1){let t=a;if(!r){const r=new Map;a.forEach(((t,n)=>{t.realm===e.tenantId&&r.set(n,t)}));const n=r.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),a.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),r.values().next().value;t=r}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach(((e,t)=>{this.removeIdToken(t)})),n&&o&&n.addFields({multiMatchedID:a.size},o),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),a.values().next().value}getIdTokensByFilter(e,t){const r=t&&t.idToken||this.getTokenKeys().idToken,n=new Map;return r.forEach((t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;const r=this.getIdTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&n.set(t,r)})),n}idTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return!(t.clientId&&-1===r.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,r,n,o,i){this.commonLogger.trace("CacheManager - getAccessToken called");const a=Nt.createSearchScopes(t.scopes),s=t.authenticationScheme||O.BEARER,c=s&&s.toLowerCase()!==O.BEARER.toLowerCase()?A.ACCESS_TOKEN_WITH_AUTH_SCHEME:A.ACCESS_TOKEN,h={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:c,clientId:this.clientId,realm:n||e.tenantId,target:a,tokenType:s,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},l=r&&r.accessToken||this.getTokenKeys().accessToken,d=[];l.forEach((e=>{if(this.accessTokenKeyMatchesFilter(e,h,!0)){const t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,h)&&d.push(t)}}));const u=d.length;return u<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):u>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),d.forEach((e=>{this.removeAccessToken(Ge(e))})),o&&i&&o.addFields({multiMatchedAT:d.length},i),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),d[0])}accessTokenKeyMatchesFilter(e,t,r){const n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===n.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),r=[];return t.accessToken.forEach((t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;const n=this.getAccessTokenCredential(t);n&&this.credentialMatchesFilter(n,e)&&r.push(n)})),r}getRefreshToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?S:void 0,a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:A.REFRESH_TOKEN,clientId:this.clientId,familyId:i},s=r&&r.refreshToken||this.getTokenKeys().refreshToken,c=[];s.forEach((e=>{if(this.refreshTokenKeyMatchesFilter(e,a)){const t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,a)&&c.push(t)}}));const h=c.length;return h<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(h>1&&n&&o&&n.addFields({multiMatchedRT:h},o),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),c[0])}refreshTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return!(t.familyId&&-1===r.indexOf(t.familyId.toLowerCase())||!t.familyId&&t.clientId&&-1===r.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map((e=>r[e])),o=n.length;if(o<1)return null;if(o>1)throw xe(ae);return n[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==S)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!(!e||"string"!=typeof e||t?.toLowerCase()!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const r=function(e,t){let r;const n=e.canonicalAuthority;if(n){const o=new $t(n).getUrlComponents().HostNameAndPort;r=Qt(o,e.cloudDiscoveryMetadata?.metadata,R,t)||Qt(o,Wt.metadata,P,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}const r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){return!(e.credentialType!==A.ACCESS_TOKEN&&e.credentialType!==A.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)&&Nt.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(k)}isAuthorityMetadata(e){return-1!==e.indexOf(b)}generateAuthorityMetadataCacheKey(e){return`${b}-${this.clientId}-${e}`}static toObject(e,t){for(const r in t)e[r]=t[r];return e}}class tr extends er{setAccount(){throw xe(Oe)}getAccount(){throw xe(Oe)}getCachedAccountEntity(){throw xe(Oe)}setIdTokenCredential(){throw xe(Oe)}getIdTokenCredential(){throw xe(Oe)}setAccessTokenCredential(){throw xe(Oe)}getAccessTokenCredential(){throw xe(Oe)}setRefreshTokenCredential(){throw xe(Oe)}getRefreshTokenCredential(){throw xe(Oe)}setAppMetadata(){throw xe(Oe)}getAppMetadata(){throw xe(Oe)}setServerTelemetry(){throw xe(Oe)}getServerTelemetry(){throw xe(Oe)}setAuthorityMetadata(){throw xe(Oe)}getAuthorityMetadata(){throw xe(Oe)}getAuthorityMetadataKeys(){throw xe(Oe)}setThrottlingCache(){throw xe(Oe)}getThrottlingCache(){throw xe(Oe)}removeItem(){throw xe(Oe)}getKeys(){throw xe(Oe)}getAccountKeys(){throw xe(Oe)}getTokenKeys(){throw xe(Oe)}async clear(){throw xe(Oe)}updateCredentialCacheKey(){throw xe(Oe)}removeOutdatedAccount(){throw xe(Oe)}}const rr={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},nr={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:N.Info,correlationId:e.EMPTY_STRING},or={claimsBasedCachingEnabled:!1},ir={async sendGetRequestAsync(){throw xe(Oe)},async sendPostRequestAsync(){throw xe(Oe)}},ar={sku:e.SKU,version:Be,cpu:e.EMPTY_STRING,os:e.EMPTY_STRING},sr={clientSecret:e.EMPTY_STRING,clientAssertion:void 0},cr={azureCloudInstance:L,tenant:`${e.DEFAULT_COMMON_TENANT}`},hr={application:{appName:"",appVersion:""}};function lr(e){return e.authOptions.authority.options.protocolMode===U}const dr={sendGetRequestAsync:()=>Promise.reject(xe(Oe)),sendPostRequestAsync:()=>Promise.reject(xe(Oe))},ur={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},gr=(new Map([[ur.AcquireTokenByCode,"ATByCode"],[ur.AcquireTokenByRefreshToken,"ATByRT"],[ur.AcquireTokenSilent,"ATS"],[ur.AcquireTokenSilentAsync,"ATSAsync"],[ur.AcquireTokenPopup,"ATPopup"],[ur.AcquireTokenRedirect,"ATRedirect"],[ur.CryptoOptsGetPublicKeyThumbprint,"CryptoGetPKThumb"],[ur.CryptoOptsSignJwt,"CryptoSignJwt"],[ur.SilentCacheClientAcquireToken,"SltCacheClientAT"],[ur.SilentIframeClientAcquireToken,"SltIframeClientAT"],[ur.SilentRefreshClientAcquireToken,"SltRClientAT"],[ur.SsoSilent,"SsoSlt"],[ur.StandardInteractionClientGetDiscoveredAuthority,"StdIntClientGetDiscAuth"],[ur.FetchAccountIdWithNativeBroker,"FetchAccIdWithNtvBroker"],[ur.NativeInteractionClientAcquireToken,"NtvIntClientAT"],[ur.BaseClientCreateTokenRequestHeaders,"BaseClientCreateTReqHead"],[ur.RefreshTokenClientExecutePostToTokenEndpoint,"RTClientExecPost"],[ur.AuthorizationCodeClientExecutePostToTokenEndpoint,"AuthCodeClientExecPost"],[ur.BrokerHandhshake,"BrokerHandshake"],[ur.AcquireTokenByRefreshTokenInBroker,"ATByRTInBroker"],[ur.AcquireTokenByBroker,"ATByBroker"],[ur.RefreshTokenClientExecuteTokenRequest,"RTClientExecTReq"],[ur.RefreshTokenClientAcquireToken,"RTClientAT"],[ur.RefreshTokenClientAcquireTokenWithCachedRefreshToken,"RTClientATWithCachedRT"],[ur.RefreshTokenClientAcquireTokenByRefreshToken,"RTClientATByRT"],[ur.RefreshTokenClientCreateTokenRequestBody,"RTClientCreateTReqBody"],[ur.AcquireTokenFromCache,"ATFromCache"],[ur.SilentFlowClientAcquireCachedToken,"SltFlowClientATCached"],[ur.SilentFlowClientGenerateResultFromCacheRecord,"SltFlowClientGenResFromCache"],[ur.AcquireTokenBySilentIframe,"ATBySltIframe"],[ur.InitializeBaseRequest,"InitBaseReq"],[ur.InitializeSilentRequest,"InitSltReq"],[ur.InitializeClientApplication,"InitClientApplication"],[ur.SilentIframeClientTokenHelper,"SIClientTHelper"],[ur.SilentHandlerInitiateAuthRequest,"SHandlerInitAuthReq"],[ur.SilentHandlerMonitorIframeForHash,"SltHandlerMonitorIframeForHash"],[ur.SilentHandlerLoadFrame,"SHandlerLoadFrame"],[ur.SilentHandlerLoadFrameSync,"SHandlerLoadFrameSync"],[ur.StandardInteractionClientCreateAuthCodeClient,"StdIntClientCreateAuthCodeClient"],[ur.StandardInteractionClientGetClientConfiguration,"StdIntClientGetClientConf"],[ur.StandardInteractionClientInitializeAuthorizationRequest,"StdIntClientInitAuthReq"],[ur.StandardInteractionClientInitializeAuthorizationCodeRequest,"StdIntClientInitAuthCodeReq"],[ur.GetAuthCodeUrl,"GetAuthCodeUrl"],[ur.HandleCodeResponseFromServer,"HandleCodeResFromServer"],[ur.HandleCodeResponse,"HandleCodeResp"],[ur.UpdateTokenEndpointAuthority,"UpdTEndpointAuth"],[ur.AuthClientAcquireToken,"AuthClientAT"],[ur.AuthClientExecuteTokenRequest,"AuthClientExecTReq"],[ur.AuthClientCreateTokenRequestBody,"AuthClientCreateTReqBody"],[ur.AuthClientCreateQueryString,"AuthClientCreateQueryStr"],[ur.PopTokenGenerateCnf,"PopTGenCnf"],[ur.PopTokenGenerateKid,"PopTGenKid"],[ur.HandleServerTokenResponse,"HandleServerTRes"],[ur.DeserializeResponse,"DeserializeRes"],[ur.AuthorityFactoryCreateDiscoveredInstance,"AuthFactCreateDiscInst"],[ur.AuthorityResolveEndpointsAsync,"AuthResolveEndpointsAsync"],[ur.AuthorityResolveEndpointsFromLocalSources,"AuthResolveEndpointsFromLocal"],[ur.AuthorityGetCloudDiscoveryMetadataFromNetwork,"AuthGetCDMetaFromNet"],[ur.AuthorityUpdateCloudDiscoveryMetadata,"AuthUpdCDMeta"],[ur.AuthorityGetEndpointMetadataFromNetwork,"AuthUpdCDMetaFromNet"],[ur.AuthorityUpdateEndpointMetadata,"AuthUpdEndpointMeta"],[ur.AuthorityUpdateMetadataWithRegionalInformation,"AuthUpdMetaWithRegInfo"],[ur.RegionDiscoveryDetectRegion,"RegDiscDetectReg"],[ur.RegionDiscoveryGetRegionFromIMDS,"RegDiscGetRegFromIMDS"],[ur.RegionDiscoveryGetCurrentVersion,"RegDiscGetCurrentVer"],[ur.AcquireTokenByCodeAsync,"ATByCodeAsync"],[ur.GetEndpointMetadataFromNetwork,"GetEndpointMetaFromNet"],[ur.GetCloudDiscoveryMetadataFromNetworkMeasurement,"GetCDMetaFromNet"],[ur.HandleRedirectPromiseMeasurement,"HandleRedirectPromise"],[ur.HandleNativeRedirectPromiseMeasurement,"HandleNtvRedirectPromise"],[ur.UpdateCloudDiscoveryMetadataMeasurement,"UpdateCDMeta"],[ur.UsernamePasswordClientAcquireToken,"UserPassClientAT"],[ur.NativeMessageHandlerHandshake,"NtvMsgHandlerHandshake"],[ur.NativeGenerateAuthResult,"NtvGenAuthRes"],[ur.RemoveHiddenIframe,"RemoveHiddenIframe"],[ur.ClearTokensAndKeysWithClaims,"ClearTAndKeysWithClaims"],[ur.CacheManagerGetRefreshToken,"CacheManagerGetRT"],[ur.GeneratePkceCodes,"GenPkceCodes"],[ur.GenerateCodeVerifier,"GenCodeVerifier"],[ur.GenerateCodeChallengeFromVerifier,"GenCodeChallengeFromVerifier"],[ur.Sha256Digest,"Sha256Digest"],[ur.GetRandomValues,"GetRandomValues"]]),1);new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT"]);class pr{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class mr{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:gr,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new pr}}startPerformanceMeasurement(){return new pr}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}const fr={INTERACTION_IN_PROGRESS_VALUE:"interaction_in_progress",INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},yr="53ee284d-920a-4b59-9d30-a60315b26836",Cr="ppnbnpeolgkicgegkbkbjmhlideopiji",vr="Handshake",wr="GetToken",Ir="localStorage",Tr="sessionStorage",Ar="memoryStorage",kr="request.state",Sr="request.origin",br="urlHash",Rr="request.params",Er="interaction.status",_r="ccs.credential",Pr="request.correlationId",Mr="request.native",Or="msal.account.keys",qr="msal.token.keys",Nr="wrapper.sku",Hr="wrapper.version",xr=861,Ur=862;var Lr;!function(e){e.Redirect="redirect",e.Popup="popup",e.Silent="silent",e.None="none"}(Lr||(Lr={}));const Br={scopes:t},Dr="msal.db",Fr=`${Dr}.keys`,Kr=[0,5,4];class zr{navigateInternal(e,t){return zr.defaultNavigateWindow(e,t)}navigateExternal(e,t){return zr.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise((e=>{setTimeout((()=>{e(!0)}),t.timeout)}))}}const $r="pkce_not_created",Gr="crypto_nonexistent",Wr="empty_navigate_uri",jr="hash_empty_error",Qr="no_state_in_hash",Vr="hash_does_not_contain_known_properties",Yr="unable_to_parse_state",Jr="state_interaction_type_mismatch",Xr="interaction_in_progress",Zr="popup_window_error",en="empty_window_error",tn="user_cancelled",rn="monitor_popup_timeout",nn="monitor_window_timeout",on="redirect_in_iframe",an="block_iframe_reload",sn="block_nested_popups",cn="iframe_closed_prematurely",hn="silent_logout_unsupported",ln="no_account_error",dn="silent_prompt_value_error",un="no_token_request_cache_error",gn="unable_to_parse_token_request_cache_error",pn="no_cached_authority_error",mn="auth_request_not_set_error",fn="invalid_cache_type",yn="non_browser_environment",Cn="database_not_open",vn="no_network_connectivity",wn="post_request_failed",In="get_request_failed",Tn="failed_to_parse_response",An="unable_to_load_token",kn="crypto_key_not_found",Sn="auth_code_required",bn="auth_code_or_nativeAccountId_required",Rn="spa_code_and_nativeAccountId_present",En="database_unavailable",_n="unable_to_acquire_token_from_native_platform",Pn="native_handshake_timeout",Mn="native_extension_not_installed",On="native_connection_not_established",qn="uninitialized_public_client_application",Nn="native_prompt_not_supported",Hn="invalid_base64_string",xn="invalid_pop_token_request",Un="For more visit: aka.ms/msaljs/browser-errors",Ln={[$r]:"The PKCE code challenge and verifier could not be generated.",[Gr]:"The crypto object or function is not available.",[Wr]:"Navigation URI is empty. Please check stack trace for more info.",[jr]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${Un}`,[Qr]:"Hash does not contain state. Please verify that the request originated from msal.",[Vr]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${Un}`,[Yr]:"Unable to parse state. Please verify that the request originated from msal.",[Jr]:"Hash contains state but the interaction type does not match the caller.",[Xr]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${Un}`,[Zr]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[en]:"window.open returned null or undefined window object.",[tn]:"User cancelled the flow.",[rn]:`Token acquisition in popup failed due to timeout.  ${Un}`,[nn]:`Token acquisition in iframe failed due to timeout.  ${Un}`,[on]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[an]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${Un}`,[sn]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[cn]:"The iframe being monitored was closed prematurely.",[hn]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[ln]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[dn]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[un]:"No token request found in cache.",[gn]:"The cached token request could not be parsed.",[pn]:"No cached authority found.",[mn]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[fn]:"Invalid cache type",[yn]:"Login and token requests are not supported in non-browser environments.",[Cn]:"Database is not open!",[vn]:"No network connectivity. Check your internet connection.",[wn]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[In]:"Network request failed. Please check the network trace to determine root cause.",[Tn]:"Failed to parse network response. Check network trace.",[An]:"Error loading token to cache.",[kn]:"Cryptographic Key or Keypair not found in browser storage.",[Sn]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[bn]:"An authorization code or nativeAccountId must be provided to this flow.",[Rn]:"Request cannot contain both spa code and native account id.",[En]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[_n]:`Unable to acquire token from native platform.  ${Un}`,[Pn]:"Timed out while attempting to establish connection to browser extension",[Mn]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[On]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${Un}`,[qn]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${Un}`,[Nn]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[Hn]:"Invalid base64 encoded string.",[xn]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true."};class Bn extends K{constructor(e){super(e,Ln[e]),Object.setPrototypeOf(this,Bn.prototype),this.name="BrowserAuthError"}}function Dn(e){return new Bn(e)}class Fn{async sendGetRequestAsync(e,t){let r;try{r=await fetch(e,{method:"GET",headers:this.getFetchHeaders(t)})}catch(e){throw window.navigator.onLine?Dn(In):Dn(vn)}try{return{headers:this.getHeaderDict(r.headers),body:await r.json(),status:r.status}}catch(e){throw Dn(Tn)}}async sendPostRequestAsync(t,r){const n=r&&r.body||e.EMPTY_STRING;let o;try{o=await fetch(t,{method:"POST",headers:this.getFetchHeaders(r),body:n})}catch(e){throw window.navigator.onLine?Dn(wn):Dn(vn)}try{return{headers:this.getHeaderDict(o.headers),body:await o.json(),status:o.status}}catch(e){throw Dn(Tn)}}getFetchHeaders(e){const t=new Headers;if(!e||!e.headers)return t;const r=e.headers;return Object.keys(r).forEach((e=>{t.append(e,r[e])})),t}getHeaderDict(e){const t={};return e.forEach(((e,r)=>{t[r]=e})),t}}const Kn="3.26.1";class zn{static loggerCallback(e,t){switch(e){case N.Error:return void console.error(t);case N.Info:return void console.info(t);case N.Verbose:return void console.debug(t);case N.Warning:return void console.warn(t);default:return void console.log(t)}}constructor(t){let r;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:t,cache:r,system:n,telemetry:o},i){const a={clientId:e.EMPTY_STRING,authority:`${e.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:e.EMPTY_STRING,authorityMetadata:e.EMPTY_STRING,redirectUri:e.EMPTY_STRING,postLogoutRedirectUri:e.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:x,OIDCOptions:{serverResponseType:v.FRAGMENT,defaultScopes:[e.OPENID_SCOPE,e.PROFILE_SCOPE,e.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:L,tenant:e.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},s={cacheLocation:Tr,temporaryCacheLocation:Tr,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!r||r.cacheLocation!==Ir),claimsBasedCachingEnabled:!1},c={loggerCallback:()=>{},logLevel:N.Info,piiLoggingEnabled:!1},h={...{...rr,loggerOptions:c,networkClient:i?new Fn:dr,navigationClient:new zr,loadFrameTimeout:0,windowHashTimeout:n?.loadFrameTimeout||6e4,iframeHashTimeout:n?.loadFrameTimeout||1e4,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:n?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:fr.DEFAULT_POLL_INTERVAL_MS},...n,loggerOptions:n?.loggerOptions||c},l={application:{appName:e.EMPTY_STRING,appVersion:e.EMPTY_STRING},client:new mr};if(t?.protocolMode!==U&&t?.OIDCOptions&&new H(h.loggerOptions).warning(JSON.stringify(Ot(Rt))),t?.protocolMode&&t.protocolMode!==x&&h?.allowNativeBroker)throw Ot(Et);return{auth:{...a,...t,OIDCOptions:{...a.OIDCOptions,...t?.OIDCOptions}},cache:{...s,...r},system:h,telemetry:{...l,...o}}}(t,this.browserEnvironment);try{r=window[Tr]}catch(e){}const n=r?.getItem("msal.browser.log.level"),o=r?.getItem("msal.browser.log.pii")?.toLowerCase(),i="true"===o||"false"!==o&&void 0,a={...this.config.system.loggerOptions},s=n&&Object.keys(N).includes(n)?N[n]:void 0;s&&(a.loggerCallback=zn.loggerCallback,a.logLevel=s),void 0!==i&&(a.piiLoggingEnabled=i),this.logger=new H(a,"@azure/msal-browser",Kn),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}class $n extends zn{getModuleName(){return $n.MODULE_NAME}getId(){return $n.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}$n.MODULE_NAME="",$n.ID="StandardOperatingContext";const Gn="missing_kid_error",Wn="missing_alg_error",jn={[Gn]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Wn]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class Qn extends K{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,Qn.prototype)}}function Vn(e){return new Qn(e,jn[e])}class Yn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Vn(Gn);if(!e.alg)throw Vn(Wn);const t=new Yn({typ:e.typ||"pop",kid:e.kid,alg:e.alg});return JSON.stringify(t)}}function Jn(e){return encodeURIComponent(Zn(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function Xn(e){return eo(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Zn(e){return eo((new TextEncoder).encode(e))}function eo(e){const t=Array.from(e,(e=>String.fromCodePoint(e))).join("");return btoa(t)}function to(e){return(new TextDecoder).decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw Dn(Hn)}const r=atob(t);return Uint8Array.from(r,(e=>e.codePointAt(0)||0))}(e))}const ro="SHA-256",no=new Uint8Array([1,0,1]),oo="0123456789abcdef",io=new Uint32Array(1),ao={name:"RSASSA-PKCS1-v1_5",hash:ro,modulusLength:2048,publicExponent:no};async function so(e,t,r){t?.addQueueMeasurement(ur.Sha256Digest,r);const n=(new TextEncoder).encode(e);return window.crypto.subtle.digest(ro,n)}function co(e){return window.crypto.getRandomValues(e)}function ho(){return window.crypto.getRandomValues(io),io[0]}function lo(){const e=Date.now(),t=1024*ho()+(1023&ho()),r=new Uint8Array(16),n=Math.trunc(t/2**30),o=t&2**30-1,i=ho();r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|o>>>24,r[9]=o>>>16,r[10]=o>>>8,r[11]=o,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i;let a="";for(let e=0;e<r.length;e++)a+=oo.charAt(r[e]>>>4),a+=oo.charAt(15&r[e]),3!==e&&5!==e&&7!==e&&9!==e||(a+="-");return a}async function uo(e){return window.crypto.subtle.exportKey("jwk",e)}async function go(e){const t=await so(e);return Xn(new Uint8Array(t))}class po{constructor(){this.dbName=Dr,this.version=1,this.tableName=Fr,this.dbOpen=!1}async open(){return new Promise(((e,t)=>{const r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",(e=>{e.target.result.createObjectStore(this.tableName)})),r.addEventListener("success",(t=>{const r=t;this.db=r.target.result,this.dbOpen=!0,e()})),r.addEventListener("error",(()=>t(Dn(En))))}))}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(Dn(Cn));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async setItem(e,t){return await this.validateDbIsOpen(),new Promise(((r,n)=>{if(!this.db)return n(Dn(Cn));const o=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);o.addEventListener("success",(()=>{this.closeConnection(),r()})),o.addEventListener("error",(e=>{this.closeConnection(),n(e)}))}))}async removeItem(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(Dn(Cn));const n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",(()=>{this.closeConnection(),t()})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async getKeys(){return await this.validateDbIsOpen(),new Promise(((e,t)=>{if(!this.db)return t(Dn(Cn));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",(t=>{const r=t;this.closeConnection(),e(r.target.result)})),r.addEventListener("error",(e=>{this.closeConnection(),t(e)}))}))}async containsKey(e){return await this.validateDbIsOpen(),new Promise(((t,r)=>{if(!this.db)return r(Dn(Cn));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(1===r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise(((e,t)=>{const r=window.indexedDB.deleteDatabase(Dr),n=setTimeout((()=>t(!1)),200);r.addEventListener("success",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("blocked",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("error",(()=>(clearTimeout(n),t(!1))))}))}}class mo{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach(((t,r)=>{e.push(r)})),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class fo{constructor(e){this.inMemoryCache=new mo,this.indexedDBCache=new po,this.logger=e}handleDatabaseAccessError(e){if(!(e instanceof Bn&&e.errorCode===En))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class yo{constructor(e,t){this.logger=e,function(e){if(!("crypto"in window))throw e.error("BrowserCrypto: crypto interface is unavailable"),Dn(Gr);e.verbose("BrowserCrypto: modern crypto interface available")}(e),this.cache=new fo(this.logger),this.performanceClient=t}createNewGuid(){return lo()}base64Encode(e){return Zn(e)}base64Decode(e){return to(e)}base64UrlEncode(e){return Jn(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(ur.CryptoOptsGetPublicKeyThumbprint,e.correlationId),r=await async function(e,t){return window.crypto.subtle.generateKey(ao,e,t)}(yo.EXTRACTABLE,yo.POP_KEY_USAGES),n=await uo(r.publicKey),o=Co({e:n.e,kty:n.kty,n:n.n}),i=await this.hashString(o),a=await uo(r.privateKey),s=await async function(e){return window.crypto.subtle.importKey("jwk",e,ao,!1,["sign"])}(a);return await this.cache.setItem(i,{privateKey:s,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),i}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){const o=this.performanceClient?.startMeasurement(ur.CryptoOptsSignJwt,n),i=await this.cache.getItem(t);if(!i)throw Dn(kn);const a=await uo(i.publicKey),s=Co(a),c=Jn(JSON.stringify({kid:t})),h=Jn(Yn.getShrHeaderString({...r?.header,alg:a.alg,kid:c}));e.cnf={jwk:JSON.parse(s)};const l=`${h}.${Jn(JSON.stringify(e))}`,d=(new TextEncoder).encode(l),u=await async function(e,t){return window.crypto.subtle.sign(ao,e,t)}(i.privateKey,d),g=`${l}.${Xn(new Uint8Array(u))}`;return o&&o.end({success:!0}),g}async hashString(e){return go(e)}}function Co(e){return JSON.stringify(e,Object.keys(e).sort())}yo.POP_KEY_USAGES=["sign","verify"],yo.EXTRACTABLE=!0;const vo=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const a=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}try{const n=e(...i);return a?.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e}},wo=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const a=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}return n?.setPreQueueTime(t,o),e(...i).then((e=>(r.trace(`Returning result from ${t}`),a?.end({success:!0}),e))).catch((e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e}))};class Io{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(t,r){this.performanceClient?.addQueueMeasurement(ur.RegionDiscoveryDetectRegion,this.correlationId);let n=t;if(n)r.region_source="3";else{const t=Io.IMDS_OPTIONS;try{const o=await wo(this.getRegionFromIMDS.bind(this),ur.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(e.IMDS_VERSION,t);if(200===o.status&&(n=o.body,r.region_source="4"),400===o.status){const e=await wo(this.getCurrentVersion.bind(this),ur.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(t);if(!e)return r.region_source="1",null;const o=await wo(this.getRegionFromIMDS.bind(this),ur.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(e,t);200===o.status&&(n=o.body,r.region_source="4")}}catch(e){return r.region_source="1",null}}return n||(r.region_source="1"),n||null}async getRegionFromIMDS(t,r){return this.performanceClient?.addQueueMeasurement(ur.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${e.IMDS_ENDPOINT}?api-version=${t}&format=text`,r,e.IMDS_TIMEOUT)}async getCurrentVersion(t){this.performanceClient?.addQueueMeasurement(ur.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const r=await this.networkInterface.sendGetRequestAsync(`${e.IMDS_ENDPOINT}?format=json`,t);return 400===r.status&&r.body&&r.body["newest-versions"]&&r.body["newest-versions"].length>0?r.body["newest-versions"][0]:null}catch(e){return null}}}Io.IMDS_OPTIONS={headers:{Metadata:"true"}};class To{constructor(e,t,r,n,o,i,a,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=a,this.correlationId=i,this.managedIdentity=s||!1,this.regionDiscovery=new Io(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(t){if(t.HostNameAndPort.endsWith(e.CIAM_AUTH_URL))return 3;const r=t.PathSegments;if(r.length)switch(r[0].toLowerCase()){case e.ADFS:return 1;case e.DSTS:return 2}return 0}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new $t(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw xe(Q)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw xe(Q)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw xe(Q)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw xe(Re);return this.replacePath(this.metadata.end_session_endpoint)}throw xe(Q)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw xe(Q)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw xe(Q)}canReplaceTenant(e){return 1===e.PathSegments.length&&!To.reservedTenantDomains.has(e.PathSegments[0])&&0===this.getAuthorityType(e)&&this.protocolMode===x}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const r=new $t(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach(((e,o)=>{let i=n[o];if(0===o&&this.canReplaceTenant(r)){const e=new $t(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))})),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||1===this.authorityType||this.protocolMode!==x&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(ur.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await wo(this.updateCloudDiscoveryMetadata.bind(this),ur.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const r=await wo(this.updateEndpointMetadata.bind(this),ur.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:ot(),jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==E&&r?.source!==E&&(e.expiresAt=ot(),e.canonical_authority=this.canonicalAuthority);const n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(ur.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t)return t.source===P&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata&&(it(e,await wo(this.updateMetadataWithRegionalInformation.bind(this),ur.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority),t.source;let r=await wo(this.getEndpointMetadataFromNetwork.bind(this),ur.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await wo(this.updateMetadataWithRegionalInformation.bind(this),ur.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(r)),it(e,r,!0),_;throw xe(Y,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),it(e,t,!1),{source:R};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return it(e,t,!1),{source:P,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const r=st(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:E}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new $t(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw Ot(It)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(ur.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const r=await this.networkInterface.sendGetRequestAsync(t,e),n=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(r.body);return n?r.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Gt?Gt[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(t){this.performanceClient?.addQueueMeasurement(ur.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const r=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(r){if(r!==e.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome="2",this.regionDiscoveryMetadata.region_used=r,To.replaceWithRegionalInformation(t,r);const n=await wo(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),ur.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome="4",this.regionDiscoveryMetadata.region_used=n,To.replaceWithRegionalInformation(t,n);this.regionDiscoveryMetadata.region_outcome="5"}return t}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(ur.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const r=await wo(this.getCloudDiscoveryMetadataFromNetwork.bind(this),ur.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return at(e,r,!0),_;throw Ot(Tt)}updateCloudDiscoveryMetadataFromLocalSources(t){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||e.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||e.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${t.canonical_authority||e.NOT_APPLICABLE}`);const r=this.getCloudDiscoveryMetadataFromConfig();if(r)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),at(t,r,!1),R;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const e=(n=this.hostnameAndPort,Vt(Wt.metadata,n));if(e)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),at(t,e,!1),P;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}var n;const o=st(t);return this.isAuthoritySameType(t)&&t.aliasesFromNetwork&&!o?(this.logger.verbose("Found cloud discovery metadata in the cache."),E):(o&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(3===this.authorityType)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),To.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=Vt(JSON.parse(this.authorityOptions.cloudDiscoveryMetadata).metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),e)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),e;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),Ot(wt)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),To.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(ur.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const t=`${e.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,r={};let n=null;try{const o=await this.networkInterface.sendGetRequestAsync(t,r);let i,a;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(o.body))i=o.body,a=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(o.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`),i=o.body,i.error===e.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),a=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=Vt(a,this.hostnameAndPort)}catch(e){if(e instanceof K)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=To.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter((e=>e&&$t.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort)).length>0}static generateAuthority(t,r){let n;if(r&&r.azureCloudInstance!==L){const t=r.tenant?r.tenant:e.DEFAULT_COMMON_TENANT;n=`${r.azureCloudInstance}/${t}/`}return n||t}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return e.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw xe(Q)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return jt.has(e)}static isPublicCloudAuthority(t){return e.KNOWN_PUBLIC_CLOUDS.indexOf(t)>=0}static buildRegionalAuthorityString(t,r,n){const o=new $t(t);o.validateAsUri();const i=o.getUrlComponents();let a=`${r}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(a=`${r}.${e.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const s=$t.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:a}).urlString;return n?`${s}?${n}`:s}static replaceWithRegionalInformation(e,t){const r={...e};return r.authorization_endpoint=To.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=To.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=To.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(t){let r=t;const n=new $t(t).getUrlComponents();return 0===n.PathSegments.length&&n.HostNameAndPort.endsWith(e.CIAM_AUTH_URL)&&(r=`${r}${n.HostNameAndPort.split(".")[0]}${e.AAD_TENANT_DOMAIN_SUFFIX}`),r}}function Ao(t){return t.endsWith(e.FORWARD_SLASH)?t:`${t}${e.FORWARD_SLASH}`}function ko(e){const t=e.cloudDiscoveryMetadata;let r;if(t)try{r=JSON.parse(t)}catch(e){throw Ot(wt)}return{canonicalAuthority:e.authority?Ao(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:r}}To.reservedTenantDomains=new Set(["{tenant}","{tenantid}",g,m,p]);const So="no_tokens_found",bo="native_account_unavailable",Ro="refresh_token_expired",Eo="bad_token",_o=["interaction_required","consent_required","login_required",Eo],Po=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Mo={[So]:"No refresh token found in the cache. Please sign-in.",[bo]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[Ro]:"Refresh token has expired.",[Eo]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};Mo[So],Mo[bo],Mo[Eo];class Oo extends K{constructor(t,r,n,o,i,a,s,c){super(t,r,n),Object.setPrototypeOf(this,Oo.prototype),this.timestamp=o||e.EMPTY_STRING,this.traceId=i||e.EMPTY_STRING,this.correlationId=a||e.EMPTY_STRING,this.claims=s||e.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function qo(e,t,r){const n=!!e&&_o.indexOf(e)>-1,o=!!r&&Po.indexOf(r)>-1,i=!!t&&_o.some((e=>t.indexOf(e)>-1));return n||i||o}function No(e){return new Oo(e,Mo[e])}class Ho{static setRequestState(t,r,n){const o=Ho.generateLibraryState(t,n);return r?`${o}${e.RESOURCE_DELIM}${r}`:o}static generateLibraryState(e,t){if(!e)throw xe(Ce);const r={id:e.createNewGuid()};t&&(r.meta=t);const n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(t,r){if(!t)throw xe(Ce);if(!r)throw xe(X);try{const n=r.split(e.RESOURCE_DELIM),o=n[0],i=n.length>1?n.slice(1).join(e.RESOURCE_DELIM):e.EMPTY_STRING,a=t.base64Decode(o),s=JSON.parse(a);return{userRequestState:i||e.EMPTY_STRING,libraryState:s}}catch(e){throw xe(X)}}}const xo="home_account_id",Uo="UPN",Lo="storage_not_supported",Bo="stubbed_public_client_application_called",Do="in_mem_redirect_unavailable",Fo={[Lo]:"Given storage configuration option was not supported.",[Bo]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Do]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};Fo[Lo],Fo[Bo],Fo[Do];class Ko extends K{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,Ko.prototype)}}function zo(e){return new Ko(e,Fo[e])}class $o{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==Ir&&e!==Tr||!window[e])throw zo(Lo)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}function Go(e,t){if(!t)return null;try{return Ho.parseRequestState(e,t).libraryState.meta}catch(e){throw xe(X)}}class Wo extends er{constructor(e,t,r,n,o,i){super(e,r,n,o),this.COOKIE_LIFE_MULTIPLIER=864e5,this.cacheConfig=t,this.logger=n,this.internalStorage=new mo,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=i}setupBrowserStorage(e){switch(e){case Ir:case Tr:try{return new $o(e)}catch(e){this.logger.verbose(e);break}}return this.cacheConfig.cacheLocation=Ar,new mo}setupTemporaryCacheStorage(e,t){switch(t){case Ir:case Tr:try{return new $o(e||Tr)}catch(e){return this.logger.verbose(e),this.internalStorage}default:return this.internalStorage}}migrateCacheEntries(){const t=`${e.CACHE_PREFIX}.${a}`,r=`${e.CACHE_PREFIX}.${s}`,n=`${e.CACHE_PREFIX}.${h}`,o=`${e.CACHE_PREFIX}.${l}`,i=[this.browserStorage.getItem(t),this.browserStorage.getItem(r),this.browserStorage.getItem(n),this.browserStorage.getItem(o)];[a,s,h,l].forEach(((e,t)=>{const r=i[t];r&&this.setTemporaryCache(e,r,!0)}))}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(Or),t=this.getItem(`${qr}.${this.clientId}`);e&&t?this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration."):this.browserStorage.getKeys().forEach((e=>{if(this.isCredentialKey(e)){const t=this.getItem(e);if(t){const r=this.validateAndParseJson(t);if(r&&r.hasOwnProperty("credentialType"))switch(r.credentialType){case A.ID_TOKEN:if(Je(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,A.ID_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case A.ACCESS_TOKEN:case A.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(Ye(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,A.ACCESS_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case A.REFRESH_TOKEN:if(Xe(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,A.REFRESH_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){const t=this.getItem(e);if(t){const r=this.validateAndParseJson(t);r&&Ft.isAccountEntity(r)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}}))}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const r=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,r,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const r=this.validateAndParseJson(t);return r&&Ft.isAccountEntity(r)?er.toObject(new Ft,r):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(Or);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(Or,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),r=t.indexOf(e);r>-1?(t.splice(r,1),this.setItem(Or,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,A.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,A.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,A.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${qr}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const r=this.getTokenKeys();switch(t){case A.ID_TOKEN:-1===r.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),r.idToken.push(e));break;case A.ACCESS_TOKEN:-1===r.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),r.accessToken.push(e));break;case A.REFRESH_TOKEN:-1===r.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),r.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),xe(ve)}this.setItem(`${qr}.${this.clientId}`,JSON.stringify(r))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const r=this.getTokenKeys();switch(t){case A.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const n=r.idToken.indexOf(e);n>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),r.idToken.splice(n,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case A.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const o=r.accessToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),r.accessToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case A.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const i=r.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),r.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),xe(ve)}this.setItem(`${qr}.${this.clientId}`,JSON.stringify(r))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ID_TOKEN),null;const r=this.validateAndParseJson(t);return r&&Je(r)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=Ge(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ACCESS_TOKEN),null;const r=this.validateAndParseJson(t);return r&&Ye(r)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=Ge(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.REFRESH_TOKEN),null;const r=this.validateAndParseJson(t);return r&&Xe(r)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=Ge(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&((n=r)&&0===e.indexOf(k)&&n.hasOwnProperty("clientId")&&n.hasOwnProperty("environment"))?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null);var n}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=function({environment:e,clientId:t}){return[k,e,t].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){const r=0===e.indexOf(M.CACHE_KEY);let n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){return!!t&&0===e.indexOf(b)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}(e,r)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter((e=>this.isAuthorityMetadata(e)))}setWrapperMetadata(e,t){this.internalStorage.setItem(Nr,e),this.internalStorage.setItem(Hr,t)}getWrapperMetadata(){return[this.internalStorage.getItem(Nr)||e.EMPTY_STRING,this.internalStorage.getItem(Hr)||e.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(u),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const e=this.generateCacheKey(d),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const r=this.getAccountInfoFilteredBy({localAccountId:t});return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(r),r):null}const r=this.validateAndParseJson(t);return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:r.homeAccountId,localAccountId:r.localAccountId,tenantId:r.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(u),r=this.generateCacheKey(d);if(e){this.logger.verbose("setActiveAccount: Active account set");const n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(n)),this.browserStorage.setItem(r,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(r)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){let r=!1;e&&(r=0===e.indexOf(q));let n=!0;return t&&(n=t.hasOwnProperty("throttleTime")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),r):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.getItemCookie(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===Ir){const e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){const n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(n,t))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach((t=>{-1===t.indexOf(e.CACHE_PREFIX)&&-1===t.indexOf(this.clientId)||this.removeTemporaryItem(t)})),this.browserStorage.getKeys().forEach((t=>{-1===t.indexOf(e.CACHE_PREFIX)&&-1===t.indexOf(this.clientId)||this.browserStorage.removeItem(t)})),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(ur.ClearTokensAndKeysWithClaims,t);const r=this.getTokenKeys(),n=[];r.accessToken.forEach((e=>{const t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(e))})),await Promise.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,r){let n=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;r&&(n+=`expires=${this.getCookieExpirationTime(r)};`),this.cacheConfig.secureCookies&&(n+="Secure;"),document.cookie=n}getItemCookie(t){const r=`${encodeURIComponent(t)}=`,n=document.cookie.split(";");for(let e=0;e<n.length;e++){let t=n[e];for(;" "===t.charAt(0);)t=t.substring(1);if(0===t.indexOf(r))return decodeURIComponent(t.substring(r.length,t.length))}return e.EMPTY_STRING}clearMsalCookies(){const t=`${e.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach((e=>{for(;" "===e.charAt(0);)e=e.substring(1);if(0===e.indexOf(t)){const t=e.split("=")[0];this.clearItemCookie(t)}}))}clearItemCookie(t){this.setItemCookie(t,e.EMPTY_STRING,-1)}getCookieExpirationTime(e){const t=new Date;return new Date(t.getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}generateCacheKey(t){return this.validateAndParseJson(t)?JSON.stringify(t):qt.startsWith(t,e.CACHE_PREFIX)||qt.startsWith(t,c)?t:`${e.CACHE_PREFIX}.${this.clientId}.${t}`}generateAuthorityKey(e){const{libraryState:{id:t}}=Ho.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`authority.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=Ho.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`nonce.id_token.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=Ho.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${kr}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),r=this.getTemporaryCache(t);if(!r)return null;const n=this.generateAuthorityKey(r);return this.getTemporaryCache(n)}updateCacheEntries(e,t,r,n,o){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);const a=this.generateNonceKey(e);this.setTemporaryCache(a,t,!1);const s=this.generateAuthorityKey(e);if(this.setTemporaryCache(s,r,!1),o){const e={credential:o.homeAccountId,type:xo};this.setTemporaryCache(_r,JSON.stringify(e),!0)}else if(n){const e={credential:n,type:Uo};this.setTemporaryCache(_r,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach((t=>{-1!==t.indexOf(e)&&this.removeTemporaryItem(t)})),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(Rr)),this.removeTemporaryItem(this.generateCacheKey(Sr)),this.removeTemporaryItem(this.generateCacheKey(br)),this.removeTemporaryItem(this.generateCacheKey(Pr)),this.removeTemporaryItem(this.generateCacheKey(_r)),this.removeTemporaryItem(this.generateCacheKey(Mr)),this.setInteractionInProgress(!1)}cleanRequestByState(t){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),t){const r=this.generateStateKey(t),n=this.temporaryCacheStorage.getItem(r);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||e.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach((t=>{if(-1===t.indexOf(kr))return;const r=this.temporaryCacheStorage.getItem(t);if(!r)return;const n=Go(this.cryptoImpl,r);n&&n.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r))})),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=Zn(JSON.stringify(e));this.setTemporaryCache(Rr,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(Rr,!0);if(!t)throw Dn(un);let r;try{r=JSON.parse(to(t))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),Dn(gn)}if(this.removeTemporaryItem(this.generateCacheKey(Rr)),!r.authority){const t=this.generateAuthorityKey(e),n=this.getTemporaryCache(t);if(!n)throw Dn(pn);r.authority=n}return r}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(Mr,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;return this.validateAndParseJson(e)||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const t=`${e.CACHE_PREFIX}.${Er}`;return this.getTemporaryCache(t,!1)}setInteractionInProgress(t){const r=`${e.CACHE_PREFIX}.${Er}`;if(t){if(this.getInteractionInProgress())throw Dn(Xr);this.setTemporaryCache(r,this.clientId,!1)}else t||this.getInteractionInProgress()!==this.clientId||this.removeTemporaryItem(r)}getLegacyLoginHint(){const e=this.getTemporaryCache(c);e&&(this.browserStorage.removeItem(c),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(a,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(a)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const r=t||e;if(r){const e=De(r,to);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const r=Ge(t);if(e!==r){const n=this.getItem(e);if(n)return this.browserStorage.removeItem(e),this.setItem(r,n),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),r;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){const r=We(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let n;t.claims&&(n=await this.cryptoImpl.hashString(t.claims));const o={idToken:r,accessToken:je(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,to,void 0,e.tokenType,void 0,t.sshKid,t.claims,n)};return this.saveCacheRecord(o)}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof Zt&&this.performanceClient&&r)try{const e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},r)}catch(e){}throw e}}}const jo=(e,t)=>new Wo(e,{cacheLocation:Ar,temporaryCacheLocation:Ar,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},Ue,t);function Qo(e,t,r,n){return e.verbose("getAllAccounts called"),r?t.getAllAccounts(n):[]}function Vo(e,t,r){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;const n=r.getAccountInfoFilteredBy(e);return n?(t.verbose("getAccount: Account matching provided filter found, returning"),n):(t.verbose("getAccount: No matching account found, returning null"),null)}function Yo(e,t,r){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;const n=r.getAccountInfoFilteredBy({username:e});return n?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),n):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}function Jo(e,t,r){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;const n=r.getAccountInfoFilteredBy({homeAccountId:e});return n?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),n):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function Xo(e,t,r){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;const n=r.getAccountInfoFilteredBy({localAccountId:e});return n?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),n):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function Zo(e,t){t.setActiveAccount(e)}function ei(e){return e.getActiveAccount()}function ti(){return window.parent!==window}function ri(){return window.location.href.split("?")[0].split("#")[0]}function ni(){if("undefined"==typeof window)throw Dn(yn)}function oi(e){if(!e)throw Dn(qn)}function ii(e){ni(),function(){if($t.hashContainsKnownProperties(window.location.hash)&&ti())throw Dn(an)}(),function(){if("undefined"!=typeof window&&window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${fr.POPUP_NAME_PREFIX}.`))throw Dn(sn)}(),oi(e)}function ai(e,t){if(ii(e),function(e){if(ti()&&!e)throw Dn(on)}(t.system.allowRedirectInIframe),t.cache.cacheLocation===Ar&&!t.cache.storeAuthStateInCookie)throw zo(Do)}function si(e){const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout((()=>{try{document.head.removeChild(t)}catch{}}),1e4)}const ci="msal:initializeEnd",hi="msal:loginStart",li="msal:loginSuccess",di="msal:loginFailure",ui="msal:acquireTokenStart",gi="msal:acquireTokenSuccess",pi="msal:acquireTokenFailure",mi="msal:acquireTokenByCodeFailure",fi="msal:handleRedirectEnd",yi="msal:popupOpened",Ci="msal:logoutStart",vi="msal:logoutSuccess",wi="msal:logoutFailure",Ii="msal:logoutEnd";class Ti{constructor(e){this.eventCallbacks=new Map,this.logger=e||new H({})}addEventCallback(e,t,r){if("undefined"!=typeof window){const n=r||lo();return this.eventCallbacks.has(n)?(this.logger.error(`Event callback with id: ${n} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(n,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${n}`),n)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,r,n){if("undefined"!=typeof window){const o={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};this.eventCallbacks.forEach((([t,r],n)=>{(0===r.length||r.includes(e))&&(this.logger.verbose(`Emitting event to callback ${n}: ${e}`),t.apply(null,[o]))}))}}}class Ai extends K{constructor(e,t,r,n,o){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=o,Object.setPrototypeOf(this,Ai.prototype)}}class ki{static generateThrottlingStorageKey(e){return`${q}.${JSON.stringify(e)}`}static preProcess(t,r){const n=ki.generateThrottlingStorageKey(r),o=t.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now())return void t.removeItem(n);throw new Ai(o.errorCodes?.join(" ")||e.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,r){if(ki.checkResponseStatus(r)||ki.checkResponseForRetryAfter(r)){const o={throttleTime:ki.calculateThrottleTime(parseInt(r.headers[n])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(ki.generateThrottlingStorageKey(t),o)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(n)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){const t=e<=0?0:e,r=Date.now()/1e3;return Math.floor(1e3*Math.min(r+(t||60),r+3600))}static removeThrottle(e,t,r,n){const o={clientId:t,authority:r.authority,scopes:r.scopes,homeAccountIdentifier:n,claims:r.claims,authenticationScheme:r.authenticationScheme,resourceRequestMethod:r.resourceRequestMethod,resourceRequestUri:r.resourceRequestUri,shrClaims:r.shrClaims,sshKid:r.sshKid},i=this.generateThrottlingStorageKey(o);e.removeItem(i)}}class Si{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,r){let n;ki.preProcess(this.cacheManager,e);try{n=await this.networkClient.sendPostRequestAsync(t,r)}catch(e){throw e instanceof K?e:xe(V)}return ki.postProcess(this.cacheManager,e,n),n}}const bi="client_id",Ri="response_type",Ei="token_type",_i="req_cnf",Pi="return_spa_code",Mi="x-client-xtra-sku";class Oi{static validateRedirectUri(e){if(!e)throw Ot(ct)}static validatePrompt(e){const t=[];for(const e in y)t.push(y[e]);if(t.indexOf(e)<0)throw Ot(pt)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw Ot(mt)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw Ot(vt);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([C.PLAIN,C.S256].indexOf(e)<0)throw Ot(Ct)}}class qi{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(Ri,encodeURIComponent(e.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(Ri,encodeURIComponent(`${e.TOKEN_RESPONSE_TYPE} ${e.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||w.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,r=!0,n=t){!r||n.includes("openid")||e.includes("openid")||n.push("openid");const o=r?[...e||[],...n]:e||[],i=new Nt(o);this.parameters.set("scope",encodeURIComponent(i.printScopes()))}addClientId(e){this.parameters.set(bi,encodeURIComponent(e))}addRedirectUri(e){Oi.validateRedirectUri(e),this.parameters.set("redirect_uri",encodeURIComponent(e))}addPostLogoutRedirectUri(e){Oi.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(o,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(o,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){const r=this.addClientCapabilitiesToClaims(e,t);Oi.validateClaims(r),this.parameters.set("claims",encodeURIComponent(r))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){Oi.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(Oi.validateCodeChallengeParams(e,t),!e||!t)throw Ot(vt);this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t))}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set("client_info","1")}addExtraQueryParameters(e){Object.entries(e).forEach((([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)}))}addClientCapabilitiesToClaims(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw Ot(mt)}else r={};return t&&t.length>0&&(r.hasOwnProperty(f)||(r[f]={}),r[f].xms_cc={values:t}),JSON.stringify(r)}addUsername(e){this.parameters.set("username",encodeURIComponent(e))}addPassword(e){this.parameters.set("password",encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(Ei,O.POP),this.parameters.set(_i,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(Ei,O.SSH),this.parameters.set(_i,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability","retry-after, h429")}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach(((t,r)=>{e.push(`${r}=${t}`)})),e.join("&")}}async function Ni(e,t,r,n,o,i,a){a?.addQueueMeasurement(ur.AuthorityFactoryCreateDiscoveredInstance,i);const s=To.transformCIAMAuthority(Ao(e)),c=new To(s,t,r,n,o,i,a);try{return await wo(c.resolveEndpointsAsync.bind(c),ur.AuthorityResolveEndpointsAsync,o,a,i)(),c}catch(e){throw xe(Q)}}class Hi{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:a,clientCredentials:s,libraryInfo:c,telemetry:h,serverTelemetryManager:l,persistencePlugin:d,serializableCache:u}){const g={...nr,...r};return{authOptions:(p=e,{clientCapabilities:[],azureCloudOptions:cr,skipAuthorityMetadataCache:!1,instanceAware:!1,...p}),systemOptions:{...rr,...t},loggerOptions:g,cacheOptions:{...or,...n},storageInterface:o||new tr(e.clientId,Ue,new H(g)),networkInterface:i||ir,cryptoInterface:a||Ue,clientCredentials:s||sr,libraryInfo:{...ar,...c},telemetry:{...hr,...h},serverTelemetryManager:l||null,persistencePlugin:d||null,serializableCache:u||null};var p}(e),this.logger=new H(this.config.loggerOptions,Le,Be),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new Si(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(t){const r={};if(r["Content-Type"]=e.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&t)switch(t.type){case xo:try{const e=xt(t.credential);r[o]=`Oid:${e.uid}@${e.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Uo:r[o]=`UPN: ${t.credential}`}return r}async executePostToTokenEndpoint(e,t,r,n,o,i){i&&this.performanceClient?.addQueueMeasurement(i,o);const a=await this.networkManager.sendPostRequest(n,e,{body:t,headers:r});return this.performanceClient?.addFields({refreshTokenSize:a.body.refresh_token?.length||0,httpVerToken:a.headers?.["x-ms-httpver"]||""},o),this.config.serverTelemetryManager&&a.status<500&&429!==a.status&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(ur.UpdateTokenEndpointAuthority,t);const r=`https://${e}/${this.authority.tenant}/`,n=await Ni(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=n}createTokenQueryParameters(e){const t=new qi;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}class xi{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(ur.PopTokenGenerateCnf,e.correlationId);const r=await wo(this.generateKid.bind(this),ur.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),n=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:n}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(ur.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){const{resourceRequestMethod:o,resourceRequestUri:i,shrClaims:a,shrNonce:s,shrOptions:c}=r,h=i?new $t(i):void 0,l=h?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:Ke(),m:o?.toUpperCase(),u:l?.HostNameAndPort,nonce:s||this.cryptoUtils.createNewGuid(),p:l?.AbsolutePath,q:l?.QueryString?[[],l.QueryString]:void 0,client_claims:a||void 0,...n},t,c,r.correlationId)}}class Ui{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class Li{constructor(e,t,r,n,o,i,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?xe(ee,"Cached State"):xe(ee,"Server State");let r,n;try{r=decodeURIComponent(e.state)}catch(t){throw xe(X,e.state)}try{n=decodeURIComponent(t)}catch(t){throw xe(X,e.state)}if(r!==n)throw xe(Z);if(e.error||e.error_description||e.suberror){const t=function(e){const t=e.error_uri?.lastIndexOf("code=");return t&&t>=0?e.error_uri?.substring(t+5):void 0}(e);if(qo(e.error,e.error_description,e.suberror))throw new Oo(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new Ai(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(t,r){if(t.error||t.error_description||t.suberror){const n=`Error(s): ${t.error_codes||e.NOT_AVAILABLE} - Timestamp: ${t.timestamp||e.NOT_AVAILABLE} - Description: ${t.error_description||e.NOT_AVAILABLE} - Correlation ID: ${t.correlation_id||e.NOT_AVAILABLE} - Trace ID: ${t.trace_id||e.NOT_AVAILABLE}`,o=t.error_codes?.length?t.error_codes[0]:void 0,i=new Ai(t.error,n,t.suberror,o,t.status);if(r&&t.status&&t.status>=500&&t.status<=599)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${i}`);if(r&&t.status&&t.status>=400&&t.status<=499)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${i}`);if(qo(t.error,t.error_description,t.suberror))throw new Oo(t.error,t.error_description,t.suberror,t.timestamp||e.EMPTY_STRING,t.trace_id||e.EMPTY_STRING,t.correlation_id||e.EMPTY_STRING,t.claims||e.EMPTY_STRING,o);throw i}}async handleServerTokenResponse(t,r,n,o,i,a,s,c,h){let l,d;if(this.performanceClient?.addQueueMeasurement(ur.HandleServerTokenResponse,t.correlation_id),t.id_token){if(l=De(t.id_token||e.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&l.nonce!==i.nonce)throw xe(te);if(o.maxAge||0===o.maxAge){const e=l.auth_time;if(!e)throw xe(re);Fe(e,o.maxAge)}}this.homeAccountIdentifier=Ft.generateHomeAccountId(t.client_info||e.EMPTY_STRING,r.authorityType,this.logger,this.cryptoObj,l),i&&i.state&&(d=Ho.parseRequestState(this.cryptoObj,i.state)),t.key_id=t.key_id||o.sshKid||void 0;const u=this.generateCacheRecord(t,r,n,o,l,a,i);let g;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),g=new Ui(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(g)),s&&!c&&u.account){const e=u.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await Li.generateAuthenticationResult(this.cryptoObj,r,u,!1,o,l,d,void 0,h)}await this.cacheStorage.saveCacheRecord(u,o.storeInCache,o.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&g&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(g))}return Li.generateAuthenticationResult(this.cryptoObj,r,u,!1,o,l,d,t,h)}generateCacheRecord(e,t,r,n,o,i,a){const s=t.getPreferredCache();if(!s)throw xe(fe);const c=Dt(o);let h,l;e.id_token&&o&&(h=We(this.homeAccountIdentifier,s,e.id_token,this.clientId,c||""),l=Bi(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,o,e.client_info,s,c,a,void 0,this.logger));let d=null;if(e.access_token){const o=e.scope?Nt.fromString(e.scope):new Nt(n.scopes||[]),a=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,h=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,l=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+a,g=u+h,p=l&&l>0?r+l:void 0;d=je(this.homeAccountIdentifier,s,e.access_token,this.clientId,c||t.tenant||"",o.printScopes(),u,g,this.cryptoObj.base64Decode,p,e.token_type,i,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),u=Qe(this.homeAccountIdentifier,s,e.refresh_token,this.clientId,e.foci,i,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:s,familyId:e.foci}),{account:l,idToken:h,accessToken:d,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(t,r,n,o,i,a,s,c,h){let l,d,u=e.EMPTY_STRING,g=[],p=null,m=e.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType!==O.POP||i.popKid)u=n.accessToken.secret;else{const e=new xi(t),{secret:r,keyId:o}=n.accessToken;if(!o)throw xe(Ee);u=await e.signPopToken(r,o,i)}g=Nt.fromString(n.accessToken.target).asArray(),p=new Date(1e3*Number(n.accessToken.expiresOn)),l=new Date(1e3*Number(n.accessToken.extendedExpiresOn)),n.accessToken.refreshOn&&(d=new Date(1e3*Number(n.accessToken.refreshOn)))}n.appMetadata&&(m=n.appMetadata.familyId===S?S:"");const f=a?.oid||a?.sub||"",y=a?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);const C=n.account?Bt(n.account.getAccountInfo(),void 0,a,n.idToken?.secret):null;return{authority:r.canonicalAuthority,uniqueId:f,tenantId:y,scopes:g,account:C,idToken:n?.idToken?.secret||"",idTokenClaims:a||{},accessToken:u,fromCache:o,expiresOn:p,extExpiresOn:l,refreshOn:d,correlationId:i.correlationId,requestId:h||e.EMPTY_STRING,familyId:m,tokenType:n.accessToken?.tokenType||e.EMPTY_STRING,state:s?s.userRequestState:e.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||e.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||e.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function Bi(e,t,r,n,o,i,a,s,c,h,l){l?.verbose("setCachedAccount called");const d=e.getAccountKeys().find((e=>e.startsWith(r)));let u=null;d&&(u=e.getAccount(d,l));const g=u||Ft.createAccount({homeAccountId:r,idTokenClaims:o,clientInfo:i,environment:a,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:h},t,n),p=g.tenantProfiles||[],m=s||g.realm;if(m&&!p.find((e=>e.tenantId===m))){const e=Lt(r,g.localAccountId,m,o);p.push(e)}return g.tenantProfiles=p,g}async function Di(e,t,r){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:r})}class Fi extends Hi{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(ur.GetAuthCodeUrl,e.correlationId);const t=await wo(this.createAuthCodeUrlQueryString.bind(this),ur.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return $t.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(ur.AuthClientAcquireToken,e.correlationId),!e.code)throw xe(se);const r=Ke(),n=await wo(this.executeTokenRequest.bind(this),ur.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=n.headers?.[i],a=new Li(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return a.validateTokenResponse(n.body),wo(a.handleServerTokenResponse.bind(a),ur.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,r,e,t,void 0,void 0,void 0,o)}handleFragmentResponse(e,t){if(new Li(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw xe(Se);return e}getLogoutUri(e){if(!e)throw Ot(yt);const t=this.createLogoutUrlQueryString(e);return $t.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(ur.AuthClientExecuteTokenRequest,t.correlationId);const r=this.createTokenQueryParameters(t),n=$t.appendQueryString(e.tokenEndpoint,r),o=await wo(this.createTokenRequestBody.bind(this),ur.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const e=Ht(t.clientInfo,this.cryptoUtils.base64Decode);i={credential:`${e.uid}${T.CLIENT_INFO_SEPARATOR}${e.utid}`,type:xo}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const a=this.createTokenRequestHeaders(i||t.ccsCredential),s={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return wo(this.executePostToTokenEndpoint.bind(this),ur.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(n,o,a,s,t.correlationId,ur.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(ur.AuthClientCreateTokenRequestBody,e.correlationId);const t=new qi;if(t.addClientId(e.tokenBodyParameters?.[bi]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):Oi.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!lr(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await Di(r.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(r.assertionType)}if(t.addGrantType("authorization_code"),t.addClientInfo(),e.authenticationScheme===O.POP){const r=new xi(this.cryptoUtils,this.performanceClient);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await wo(r.generateCnf.bind(r),ur.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(n)}else if(e.authenticationScheme===O.SSH){if(!e.sshJwk)throw Ot(At);t.addSshJwk(e.sshJwk)}const r=e.correlationId||this.config.cryptoInterface.createNewGuid();let n;if(t.addCorrelationId(r),(!qt.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=Ht(e.clientInfo,this.cryptoUtils.base64Decode);n={credential:`${t.uid}${T.CLIENT_INFO_SEPARATOR}${t.utid}`,type:xo}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else n=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&n)switch(n.type){case xo:try{const e=xt(n.credential);t.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Uo:t.addCcsUpn(n.credential)}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[Pi]||t.addExtraQueryParameters({[Pi]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(ur.AuthClientCreateQueryString,e.correlationId);const t=new qi;t.addClientId(e.extraQueryParameters?.[bi]||this.config.authOptions.clientId);const r=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(r,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const n=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(n),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),lr(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==y.SELECT_ACCOUNT)if(e.sid&&e.prompt===y.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const r=this.extractAccountSid(e.account);let n=this.extractLoginHint(e.account);if(n&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),n=null),n){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(n);try{const r=xt(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(r&&e.prompt===y.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(r);try{const r=xt(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const r=xt(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.addExtraQueryParams(e,t),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===O.POP)){const r=new xi(this.cryptoUtils);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await wo(r.generateCnf.bind(r),ur.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(n)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new qi;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}class Ki{constructor(t,r){this.cacheOutcome="0",this.cacheManager=r,this.apiId=t.apiId,this.correlationId=t.correlationId,this.wrapperSKU=t.wrapperSKU||e.EMPTY_STRING,this.wrapperVer=t.wrapperVer||e.EMPTY_STRING,this.telemetryCacheKey=M.CACHE_KEY+T.CACHE_KEY_SEPARATOR+t.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${M.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);const n=t.join(M.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(M.VALUE_SEPARATOR);return[M.SCHEMA_VERSION,o,n].join(M.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=Ki.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(M.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(M.VALUE_SEPARATOR),o=e.errors.length,i=[o,t<o?M.OVERFLOW_TRUE:M.OVERFLOW_FALSE].join(M.VALUE_SEPARATOR);return[M.SCHEMA_VERSION,e.cacheHits,r,n,i].join(M.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=M.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof K?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(M.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=Ki.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{const r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r)}}static maxErrorsToSend(t){let r,n=0,o=0;const i=t.errors.length;for(r=0;r<i;r++){const i=t.failedRequests[2*r]||e.EMPTY_STRING,a=t.failedRequests[2*r+1]||e.EMPTY_STRING,s=t.errors[r]||e.EMPTY_STRING;if(o+=i.toString().length+a.toString().length+s.length+3,!(o<M.MAX_LAST_HEADER_BYTES))break;n+=1}return n}getRegionDiscoveryFields(){const t=[];return t.push(this.regionUsed||e.EMPTY_STRING),t.push(this.regionSource||e.EMPTY_STRING),t.push(this.regionOutcome||e.EMPTY_STRING),t.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return function(e){const{skus:t,libraryName:r,libraryVersion:n,extensionName:o,extensionVersion:i}=e,a=new Map([[0,[r,n]],[2,[o,i]]]);let s=[];if(t?.length){if(s=t.split(","),s.length<4)return t}else s=Array.from({length:4},(()=>"|"));return a.forEach(((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){const{skuArr:t,index:r,skuName:n,skuVersion:o}=e;r>=t.length||(t[r]=[n,o].join("|"))}({skuArr:s,index:t,skuName:e[0],skuVersion:e[1]})})),s.join(",")}(e)}}class zi{constructor(e,t,r,n,o,i,a,s,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=i,this.nativeMessageHandler=s,this.correlationId=c||lo(),this.logger=n.clone(fr.MSAL_SKU,Kn,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e){if(e){Ft.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(Ft.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri||ri();return $t.getAbsoluteUrl(t,ri())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const r={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new Ki(r,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(ur.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,i=r?.length?"true"===r:this.config.auth.instanceAware,a=t&&i?this.config.auth.authority.replace($t.getDomainFromUrl(o),t.environment):o,s=To.generateAuthority(a,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await wo(Ni,ur.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(s,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw Ot(_t);return c}}const $i=32;async function Gi(e,t,r){e.addQueueMeasurement(ur.GeneratePkceCodes,r);const n=vo(Wi,ur.GenerateCodeVerifier,t,e,r)(e,t,r);return{verifier:n,challenge:await wo(ji,ur.GenerateCodeChallengeFromVerifier,t,e,r)(n,e,t,r)}}function Wi(e,t,r){try{const n=new Uint8Array($i);return vo(co,ur.GetRandomValues,t,e,r)(n),Xn(n)}catch(e){throw Dn($r)}}async function ji(e,t,r,n){t.addQueueMeasurement(ur.GenerateCodeChallengeFromVerifier,n);try{const o=await wo(so,ur.Sha256Digest,r,t,n)(e,t,n);return Xn(new Uint8Array(o))}catch(e){throw Dn($r)}}async function Qi(e,t,r,n){r.addQueueMeasurement(ur.InitializeBaseRequest,e.correlationId);const o=e.authority||t.auth.authority,i=[...e&&e.scopes||[]],a={...e,correlationId:e.correlationId,authority:o,scopes:i};if(a.authenticationScheme){if(a.authenticationScheme===O.SSH){if(!e.sshJwk)throw Ot(At);if(!e.sshKid)throw Ot(kt)}n.verbose(`Authentication Scheme set to "${a.authenticationScheme}" as configured in Auth request`)}else a.authenticationScheme=O.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!qt.isEmptyObj(e.claims)&&(a.requestedClaimsHash=await go(e.claims)),a}async function Vi(e,t,r,n,o){n.addQueueMeasurement(ur.InitializeSilentRequest,e.correlationId);const i=await wo(Qi,ur.InitializeBaseRequest,o,n,e.correlationId)(e,r,n,o);return{...e,...i,account:t,forceRefresh:e.forceRefresh||!1}}class Yi extends zi{async initializeAuthorizationCodeRequest(t){this.performanceClient.addQueueMeasurement(ur.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);const r=await wo(Gi,ur.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...t,redirectUri:t.redirectUri,code:e.EMPTY_STRING,codeVerifier:r.verifier};return t.codeChallenge=r.challenge,t.codeChallengeMethod=e.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||lo(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=$t.getAbsoluteUrl(e.postLogoutRedirectUri,ri())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=$t.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,ri())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=$t.getAbsoluteUrl(ri(),ri())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(ur.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await wo(this.getClientConfiguration.bind(this),ur.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new Fi(t,this.performanceClient)}async getClientConfiguration(t){const{serverTelemetryManager:r,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:a}=t;this.performanceClient.addQueueMeasurement(ur.StandardInteractionClientGetClientConfiguration,this.correlationId);const s=await wo(this.getDiscoveredAuthority.bind(this),ur.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:a}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:r,libraryInfo:{sku:fr.MSAL_SKU,version:Kn,cpu:e.EMPTY_STRING,os:e.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(t,r){this.performanceClient.addQueueMeasurement(ur.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(t.redirectUri),o={interactionType:r},i=Ho.setRequestState(this.browserCrypto,t&&t.state||e.EMPTY_STRING,o),a={...await wo(Qi,ur.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...t,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:i,nonce:t.nonce||lo(),responseMode:this.config.auth.OIDCOptions.serverResponseType},s=t.account||this.browserStorage.getActiveAccount();if(s&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${s.homeAccountId}`,this.correlationId),a.account=s),!a.loginHint&&!s){const e=this.browserStorage.getLegacyLoginHint();e&&(a.loginHint=e)}return a}}const Ji="user_switch",Xi={[Ji]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class Zi extends K{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,Zi.prototype),this.name="NativeAuthError",this.ext=r}}function ea(e){return!(!e.ext||!e.ext.status||"PERSISTENT_ERROR"!==e.ext.status&&"DISABLED"!==e.ext.status)||!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode}function ta(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return No(bo);case"USER_INTERACTION_REQUIRED":return new Oo(e,t);case"USER_CANCEL":return Dn(tn);case"NO_NETWORK":return Dn(vn)}return new Zi(e,Xi[e]||t,r)}class ra extends Hi{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(ur.RefreshTokenClientAcquireToken,e.correlationId);const t=Ke(),r=await wo(this.executeTokenRequest.bind(this),ur.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),n=r.headers?.[i],o=new Li(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r.body),wo(o.handleServerTokenResponse.bind(o),ur.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,n)}async acquireTokenByRefreshToken(e){if(!e)throw Ot(ft);if(this.performanceClient?.addQueueMeasurement(ur.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw xe(pe);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await wo(this.acquireTokenWithCachedRefreshToken.bind(this),ur.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const r=t instanceof Oo&&t.errorCode===So,n=t instanceof Ai&&"invalid_grant"===t.errorCode&&"client_mismatch"===t.subError;if(r||n)return wo(this.acquireTokenWithCachedRefreshToken.bind(this),ur.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return wo(this.acquireTokenWithCachedRefreshToken.bind(this),ur.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(ur.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const r=vo(this.cacheManager.getRefreshToken.bind(this.cacheManager),ur.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!r)throw No(So);if(r.expiresOn&&ze(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw No(Ro);const n={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||O.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:xo}};try{return await wo(this.acquireToken.bind(this),ur.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(n)}catch(e){if(e instanceof Oo&&e.subError===Eo){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const e=Ge(r);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(ur.RefreshTokenClientExecuteTokenRequest,e.correlationId);const r=this.createTokenQueryParameters(e),n=$t.appendQueryString(t.tokenEndpoint,r),o=await wo(this.createTokenRequestBody.bind(this),ur.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return wo(this.executePostToTokenEndpoint.bind(this),ur.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(n,o,i,a,e.correlationId,ur.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(ur.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,r=new qi;if(r.addClientId(e.tokenBodyParameters?.[bi]||this.config.authOptions.clientId),e.redirectUri&&r.addRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),r.addGrantType("refresh_token"),r.addClientInfo(),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!lr(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),r.addCorrelationId(t),r.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await Di(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===O.POP){const t=new xi(this.cryptoUtils,this.performanceClient);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await wo(t.generateCnf.bind(t),ur.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(n)}else if(e.authenticationScheme===O.SSH){if(!e.sshJwk)throw Ot(At);r.addSshJwk(e.sshJwk)}if((!qt.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case xo:try{const t=xt(e.ccsCredential.credential);r.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case Uo:r.addCcsUpn(e.ccsCredential.credential)}return e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),r.createQueryString()}}class na extends Hi{constructor(e,t){super(e,t)}async acquireToken(e){try{const[r,n]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...t]});return"4"===n&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new ra(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch((()=>{}))),r}catch(t){if(t instanceof He&&t.errorCode===Te)return new ra(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(ur.SilentFlowClientAcquireCachedToken,e.correlationId);let t="0";if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!qt.isEmptyObj(e.claims))throw this.setCacheOutcome("1",e.correlationId),xe(Te);if(!e.account)throw xe(pe);const r=e.account.tenantId||function(e){const t=new $t(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case g:case p:case m:return;default:return r}}(e.authority),n=this.cacheManager.getTokenKeys(),o=this.cacheManager.getAccessToken(e.account,e,n,r,this.performanceClient,e.correlationId);if(!o)throw this.setCacheOutcome("2",e.correlationId),xe(Te);if($e(o.cachedAt)||ze(o.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome("3",e.correlationId),xe(Te);o.refreshOn&&ze(o.refreshOn,0)&&(t="4");const i=e.authority||this.authority.getPreferredCache(),a={account:this.cacheManager.readAccountFromCache(e.account),accessToken:o,idToken:this.cacheManager.getIdToken(e.account,n,r,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(i)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await wo(this.generateResultFromCacheRecord.bind(this),ur.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(a,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),"0"!==e&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(ur.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(r=De(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=r?.auth_time;if(!e)throw xe(re);Fe(e,t.maxAge)}return Li.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}class oa extends Yi{async acquireToken(e){this.performanceClient.addQueueMeasurement(ur.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(61),r=await wo(this.getClientConfiguration.bind(this),ur.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),n=new na(r,this.performanceClient);this.logger.verbose("Silent auth client created");try{const t=(await wo(n.acquireCachedToken.bind(n),ur.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof Bn&&e.errorCode===kn&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}const ia="brk_redirect_uri";class aa extends zi{constructor(e,t,r,n,o,i,a,s,c,h,l,d){super(e,t,r,n,o,i,s,c,d),this.apiId=a,this.accountId=h,this.nativeMessageHandler=c,this.nativeStorageManager=l,this.silentCacheClient=new oa(e,this.nativeStorageManager,r,n,o,i,s,c,d),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);const u=this.nativeMessageHandler.getExtensionId()===Cr?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=Ki.makeExtraSkuString({libraryName:fr.MSAL_SKU,libraryVersion:Kn,extensionName:u,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[Mi]:this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(ur.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(ur.NativeInteractionClientAcquireToken,e.correlationId),r=Ke();try{const n=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,n);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const{...o}=n,i={method:wr,request:o},a=await this.nativeMessageHandler.sendMessage(i),s=this.validateNativeResponse(a);return await this.handleNativeResponse(s,n,r).then((e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),e))).catch((e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e}))}catch(e){throw e instanceof Zi&&this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:Nt.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),xe(ye);const r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!r)throw xe(ye);try{const e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),o={...r,idTokenClaims:n?.idTokenClaims,idToken:n?.idToken};return{...n,account:o}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...r}=e;delete r.onRedirectNavigate;const n=await this.initializeNativeRequest(r),o={method:wr,request:n};try{const e=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(e)}catch(e){if(e instanceof Zi&&(this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),ea(e)))throw e}this.browserStorage.setTemporaryCache(Mr,JSON.stringify(n),!0);const i={apiId:xr,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},a=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(a,i)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:n,...o}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Mr));const i={method:wr,request:o},a=Ke();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const e=await this.nativeMessageHandler.sendMessage(i);this.validateNativeResponse(e);const t=this.handleNativeResponse(e,o,a);this.browserStorage.setInteractionInProgress(!1);const r=await t;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),r}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const n=De(e.id_token,to),o=this.createHomeAccountIdentifier(e,n),i=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId;if(o!==i&&e.account.id!==t.accountId)throw ta(Ji);const a=await this.getDiscoveredAuthority({requestAuthority:t.authority}),s=Bi(this.browserStorage,a,o,to,n,e.client_info,void 0,n.tid,void 0,e.account.id,this.logger),c=await this.generateAuthenticationResult(e,t,n,s,a.canonicalAuthority,r);return this.cacheAccount(s),this.cacheNativeTokens(e,t,o,n,e.access_token,c.tenantId,r),c}createHomeAccountIdentifier(t,r){return Ft.generateHomeAccountId(t.client_info||e.EMPTY_STRING,0,this.logger,this.browserCrypto,r)}generateScopes(e,t){return e.scope?Nt.fromString(e.scope):Nt.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===O.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const r=new xi(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw xe(Ee);return r.signPopToken(e.access_token,t.keyId,n)}return e.access_token}async generateAuthenticationResult(t,r,n,o,i,a){const s=this.addTelemetryFromNativeResponse(t),c=t.scope?Nt.fromString(t.scope):Nt.fromString(r.scope),h=t.account.properties||{},l=h.UID||n.oid||n.sub||e.EMPTY_STRING,d=h.TenantId||n.tid||e.EMPTY_STRING,u=Bt(o.getAccountInfo(),void 0,n,t.id_token);u.nativeAccountId!==t.account.id&&(u.nativeAccountId=t.account.id);const g=await this.generatePopAccessToken(t,r),p=r.tokenType===O.POP?O.POP:O.BEARER;return{authority:i,uniqueId:l,tenantId:d,scopes:c.asArray(),account:u,idToken:t.id_token,idTokenClaims:n,accessToken:g,fromCache:!!s&&this.isResponseFromCache(s),expiresOn:new Date(1e3*Number(a+t.expires_in)),tokenType:p,correlationId:this.correlationId,state:t.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch((e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)}))}cacheNativeTokens(t,r,n,o,i,a,s){const c=We(n,r.authority,t.id_token||"",r.clientId,o.tid||""),h=s+(r.tokenType===O.POP?e.SHR_NONCE_VALIDITY:("string"==typeof t.expires_in?parseInt(t.expires_in,10):t.expires_in)||0),l=this.generateScopes(t,r),d={idToken:c,accessToken:je(n,r.authority,i,r.clientId,o.tid||a,l.printScopes(),h,0,to,void 0,r.tokenType,void 0,r.keyId)};this.nativeStorageManager.saveCacheRecord(d,r.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw z(B,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const r=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:r,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const n=new $t(r);n.validateAsUri();const{scopes:o,...i}=e,a=new Nt(o||[]);a.appendScopes(t);const s={...i,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:a.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case 863:case 61:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),y.NONE}if(e.prompt)switch(e.prompt){case y.NONE:case y.CONSENT:case y.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),Dn(Nn)}else this.logger.trace("initializeNativeRequest: prompt was not provided")})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(s.signPopToken&&e.popKid)throw Dn(xn);if(this.handleExtraBrokerParams(s),s.extraParameters=s.extraParameters||{},s.extraParameters.telemetry="MATS",e.authenticationScheme===O.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},r=new xi(this.browserCrypto);let n;if(s.keyId)n=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:s.keyId})),s.signPopToken=!1;else{const o=await wo(r.generateCnf.bind(r),ur.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(t,this.logger);n=o.reqCnfString,s.keyId=o.kid,s.signPopToken=!0}s.reqCnf=n}return this.addRequestSKUs(s),s}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty("brk_client_id")&&e.extraParameters.hasOwnProperty(ia)&&e.extraParameters.hasOwnProperty(bi)){const t=e.extraParameters[bi],r=e.redirectUri,n=e.extraParameters[ia];e.extraParameters={child_client_id:t,child_redirect_uri:r},e.redirectUri=n}}}class sa{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(ur.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:yr,extensionId:this.extensionId,responseId:lo(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise(((e,r)=>{this.resolvers.set(t.responseId,{resolve:e,reject:r})}))}static async createProvider(e,t,r){e.trace("NativeMessageHandler - createProvider called.");try{const n=new sa(e,t,r,Cr);return await n.sendHandshakeRequest(),n}catch(n){const o=new sa(e,t,r);return await o.sendHandshakeRequest(),o}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:yr,extensionId:this.extensionId,responseId:lo(),body:{method:vr}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise(((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout((()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(Dn(Pn)),this.handshakeResolvers.delete(e.responseId)}),this.handshakeTimeoutMs)}))}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===yr&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===vr){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(Dn(Mn))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if("Response"===e){if(!r)return;const e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(ta(e.code,e.description,e.ext));else{if(!e.result)throw z(B,"Event does not contain result.");e.result.code&&e.result.description?r.reject(ta(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result)}this.resolvers.delete(t.responseId)}else if("HandshakeResponse"===e){if(!n)return void this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):n&&n.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,r,n){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!r)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(n)switch(n){case O.BEARER:case O.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}class ca{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(ur.HandleCodeResponse,t.correlationId);try{r=this.authModule.handleFragmentResponse(e,t.state)}catch(e){throw e instanceof Ai&&e.subError===tn?Dn(tn):e}return wo(this.handleCodeResponseFromServer.bind(this),ur.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(ur.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await wo(this.authModule.updateAuthority.bind(this.authModule),ur.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await wo(this.authModule.acquireToken.bind(this.authModule),ur.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:xo}:e.loginHint?{credential:e.loginHint,type:Uo}:null}}function ha(e,t,r){const n=zt(e);if(!n)throw Kt(e)?(r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),Dn(Vr)):(r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),Dn(jr));return n}class la extends Yi{constructor(e,t,r,n,o,i,a,s,c,h){super(e,t,r,n,o,i,a,c,h),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=s}acquireToken(e){try{const r={popupName:this.generatePopupName(e.scopes||t,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,r)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),r.popup=this.openSizedPopup("about:blank",r),this.acquireTokenPopupAsync(e,r))}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},n=e&&e.authority,o=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,o)):(this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,o))}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,t){this.logger.verbose("acquireTokenPopupAsync called");const r=this.initializeServerTelemetryManager(Ur),n=await wo(this.initializeAuthorizationRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,Lr.Popup);si(n.authority);try{const o=await wo(this.initializeAuthorizationCodeRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(n),i=await wo(this.createAuthCodeClient.bind(this),ur.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),a=sa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let s;a&&(s=this.performanceClient.startMeasurement(ur.FetchAccountIdWithNativeBroker,e.correlationId));const c=await i.getAuthCodeUrl({...n,nativeBroker:a}),h=new ca(i,this.browserStorage,o,this.logger,this.performanceClient),l=this.initiateAuthRequest(c,t);this.eventHandler.emitEvent(yi,Lr.Popup,{popupWindow:l},null);const d=await this.monitorPopupForHash(l,t.popupWindowParent),u=vo(ha,ur.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(d,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(ki.removeThrottle(this.browserStorage,this.config.auth.clientId,o),u.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),s&&s.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw Dn(On);const e=new aa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Ur,this.performanceClient,this.nativeMessageHandler,u.accountId,this.nativeStorage,n.correlationId),{userRequestState:t}=Ho.parseRequestState(this.browserCrypto,n.state);return await e.acquireToken({...n,state:t,prompt:void 0})}return await h.handleCodeResponse(u,n)}catch(e){throw t.popup?.close(),e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}async logoutPopupAsync(e,t,r,n){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(Ci,Lr.Popup,e);const o=this.initializeServerTelemetryManager(962);try{await this.clearCacheOnLogout(e.account);const i=await wo(this.createAuthCodeClient.bind(this),ur.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:o,requestAuthority:r,account:e.account||void 0});try{i.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&i.authority.protocolMode===U){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(vi,Lr.Popup,e),n){const e={apiId:962,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=$t.getAbsoluteUrl(n,ri());await this.navigationClient.navigateInternal(t,e)}return void t.popup?.close()}}const a=i.getLogoutUri(e);this.eventHandler.emitEvent(vi,Lr.Popup,e);const s=this.openPopup(a,t);if(this.eventHandler.emitEvent(yi,Lr.Popup,{popupWindow:s},null),await this.monitorPopupForHash(s,t.popupWindowParent).catch((()=>{})),n){const e={apiId:962,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=$t.getAbsoluteUrl(n,ri());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw t.popup?.close(),e instanceof K&&(e.setCorrelationId(this.correlationId),o.cacheFailedRequest(e)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(wi,Lr.Popup,null,e),this.eventHandler.emitEvent(Ii,Lr.Popup),e}this.eventHandler.emitEvent(Ii,Lr.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),Dn(Wr)}monitorPopupForHash(e,t){return new Promise(((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const n=setInterval((()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),void r(Dn(tn));let o="";try{o=e.location.href}catch(e){}if(!o||"about:blank"===o)return;clearInterval(n);let i="";const a=this.config.auth.OIDCOptions.serverResponseType;e&&(i=a===v.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)}),this.config.system.pollIntervalMilliseconds)})).finally((()=>{this.cleanPopup(e,t)}))}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw Dn(en);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),Dn(Zr)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){const o=n.screenLeft?n.screenLeft:n.screenX,i=n.screenTop?n.screenTop:n.screenY,a=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,s=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=r.popupSize?.width,h=r.popupSize?.height,l=r.popupPosition?.top,d=r.popupPosition?.left;return(!c||c<0||c>a)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=fr.POPUP_WIDTH),(!h||h<0||h>s)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),h=fr.POPUP_HEIGHT),(!l||l<0||l>s)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),l=Math.max(0,s/2-fr.POPUP_HEIGHT/2+i)),(!d||d<0||d>a)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),d=Math.max(0,a/2-fr.POPUP_WIDTH/2+o)),n.open(e,t,`width=${c}, height=${h}, top=${l}, left=${d}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(Lr.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${fr.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${fr.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class da{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(Sr,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(Pr,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const r={apiId:xr,timeout:t.redirectTimeout,noHistory:!1};return"function"==typeof t.onRedirectNavigate?(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),!1!==t.onRedirectNavigate(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void await t.navigationClient.navigateExternal(e,r)):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")):(this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void await t.navigationClient.navigateExternal(e,r))}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),Dn(Wr)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const r=this.browserStorage.generateStateKey(t),n=this.browserStorage.getTemporaryCache(r);if(!n)throw xe(ee,"Cached State");let o;try{o=this.authModule.handleFragmentResponse(e,n)}catch(e){throw e instanceof Ai&&e.subError===tn?Dn(tn):e}const i=this.browserStorage.generateNonceKey(n),a=this.browserStorage.getTemporaryCache(i);if(this.authCodeRequest.code=o.code,o.cloud_instance_host_name&&await wo(this.authModule.updateAuthority.bind(this.authModule),ur.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(o.cloud_instance_host_name,this.authCodeRequest.correlationId),o.nonce=a||void 0,o.state=n,o.client_info)this.authCodeRequest.clientInfo=o.client_info;else{const e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}const s=await this.authModule.acquireToken(this.authCodeRequest,o);return this.browserStorage.cleanRequestByState(t),s}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(_r,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}class ua extends Yi{constructor(e,t,r,n,o,i,a,s,c,h){super(e,t,r,n,o,i,a,c,h),this.nativeStorage=s}async acquireToken(e){const t=await wo(this.initializeAuthorizationRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,Lr.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const r=this.initializeServerTelemetryManager(xr),n=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent("msal:restoreFromBFCache",Lr.Redirect))};try{const o=await wo(this.initializeAuthorizationCodeRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),i=await wo(this.createAuthCodeClient.bind(this),ur.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),a=new da(i,this.browserStorage,o,this.logger,this.performanceClient),s=await i.getAuthCodeUrl({...t,nativeBroker:sa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),c=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",n),await a.initiateAuthRequest(s,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(e){throw e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),window.removeEventListener("pageshow",n),this.browserStorage.cleanRequestByState(t.state),e}}async handleRedirectPromise(t="",r){const n=this.initializeServerTelemetryManager(865);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[o,i]=this.getRedirectResponse(t||"");if(!o)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(Lr.Redirect),"back_forward"!==function(){if("undefined"==typeof window||void 0===window.performance||"function"!=typeof window.performance.getEntriesByType)return;const e=window.performance.getEntriesByType("navigation"),t=e.length?e[0]:void 0;return t?.type}()?r.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const a=this.browserStorage.getTemporaryCache(Sr,!0)||e.EMPTY_STRING;if($t.removeHashFromUrl(a)===$t.removeHashFromUrl(window.location.href)&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),a.indexOf("#")>-1&&function(e){const t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}(a),await this.handleResponse(o,n);if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(o,n);if(!ti()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(br,i,!0);const e={apiId:865,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let t=!0;if(a&&"null"!==a)this.logger.verbose(`Navigating to loginRequestUrl: ${a}`),t=await this.navigationClient.navigateInternal(a,e);else{const r=function(){const e=new $t(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}();this.browserStorage.setTemporaryCache(Sr,r,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(r,e)}if(!t)return await this.handleResponse(o,n)}return null}catch(e){throw e instanceof K&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.browserStorage.cleanRequestByInteractionType(Lr.Redirect),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===v.QUERY?window.location.search:window.location.hash);let r=zt(t);if(r){try{!function(e,t,r){if(!e.state)throw Dn(Qr);const n=Go(t,e.state);if(!n)throw Dn(Yr);if(n.interactionType!==r)throw Dn(Jr)}(r,this.browserCrypto,Lr.Redirect)}catch(e){return e instanceof K&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return(n=window).location.hash="","function"==typeof n.history.replaceState&&n.history.replaceState(null,"",`${n.location.origin}${n.location.pathname}${n.location.search}`),this.logger.verbose("Hash contains known properties, returning response hash"),[r,t]}var n;const o=this.browserStorage.getTemporaryCache(br,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(br)),o&&(r=zt(o),r)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[r,o]):[null,""]}async handleResponse(e,t){const r=e.state;if(!r)throw Dn(Qr);const n=this.browserStorage.getCachedRequest(r);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw Dn(On);const t=new aa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Ur,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,n.correlationId),{userRequestState:o}=Ho.parseRequestState(this.browserCrypto,r);return t.acquireToken({...n,state:o,prompt:void 0}).finally((()=>{this.browserStorage.cleanRequestByState(r)}))}const o=this.browserStorage.getCachedAuthority(r);if(!o)throw Dn(pn);const i=await wo(this.createAuthCodeClient.bind(this),ur.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:o});return ki.removeThrottle(this.browserStorage,this.config.auth.clientId,n),new da(i,this.browserStorage,n,this.logger,this.performanceClient).handleCodeResponse(e,r)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),r=this.initializeServerTelemetryManager(961);try{this.eventHandler.emitEvent(Ci,Lr.Redirect,e),await this.clearCacheOnLogout(t.account);const n={apiId:961,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},o=await wo(this.createAuthCodeClient.bind(this),ur.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(o.authority.protocolMode===U)try{o.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId)return this.browserStorage.removeAccount(t.account?.homeAccountId),void this.eventHandler.emitEvent(vi,Lr.Redirect,t)}const i=o.getLogoutUri(t);if(this.eventHandler.emitEvent(vi,Lr.Redirect,t),!e||"function"!=typeof e.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(i,n);if(!1!==e.onRedirectNavigate(i))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(i,n);this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(e){throw e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.eventHandler.emitEvent(wi,Lr.Redirect,null,e),this.eventHandler.emitEvent(Ii,Lr.Redirect),e}this.eventHandler.emitEvent(Ii,Lr.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return $t.getAbsoluteUrl(t,ri())}}async function ga(e,t,r,n,o){if(t.addQueueMeasurement(ur.SilentHandlerInitiateAuthRequest,n),!e)throw r.info("Navigate url is empty"),Dn(Wr);return o?wo(ma,ur.SilentHandlerLoadFrame,r,t,n)(e,o,t,n):vo(fa,ur.SilentHandlerLoadFrameSync,r,t,n)(e)}async function pa(e,t,r,n,o,i,a){return n.addQueueMeasurement(ur.SilentHandlerMonitorIframeForHash,i),new Promise(((n,i)=>{t<1e4&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);const s=window.setTimeout((()=>{window.clearInterval(c),i(Dn(nn))}),t),c=window.setInterval((()=>{let t="";const r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let o="";r&&(o=a===v.QUERY?r.location.search:r.location.hash),window.clearTimeout(s),window.clearInterval(c),n(o)}),r)})).finally((()=>{vo(Ca,ur.RemoveHiddenIframe,o,n,i)(e)}))}function ma(e,t,r,n){return r.addQueueMeasurement(ur.SilentHandlerLoadFrame,n),new Promise(((r,n)=>{const o=ya();window.setTimeout((()=>{o?(o.src=e,r(o)):n("Unable to load iframe")}),t)}))}function fa(e){const t=ya();return t.src=e,t}function ya(){const e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function Ca(e){document.body===e.parentNode&&document.body.removeChild(e)}class va extends Yi{constructor(e,t,r,n,o,i,a,s,c,h,l){super(e,t,r,n,o,i,s,h,l),this.apiId=a,this.nativeStorage=c}async acquireToken(e){this.performanceClient.addQueueMeasurement(ur.SilentIframeClientAcquireToken,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==y.NONE&&t.prompt!==y.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${y.NONE}`),t.prompt=y.NONE):t.prompt=y.NONE;const r=await wo(this.initializeAuthorizationRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,Lr.Silent);si(r.authority);const n=this.initializeServerTelemetryManager(this.apiId);let o;try{return o=await wo(this.createAuthCodeClient.bind(this),ur.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:r.authority,requestAzureCloudOptions:r.azureCloudOptions,requestExtraQueryParameters:r.extraQueryParameters,account:r.account}),await wo(this.silentTokenHelper.bind(this),ur.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(o,r)}catch(r){if(r instanceof K&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),!(o&&r instanceof K&&r.errorCode===fr.INVALID_GRANT_ERROR))throw r;this.performanceClient.addFields({retryError:r.errorCode},this.correlationId);const i=await wo(this.initializeAuthorizationRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,Lr.Silent);return await wo(this.silentTokenHelper.bind(this),ur.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(o,i)}}logout(){return Promise.reject(Dn(hn))}async silentTokenHelper(e,t){const r=t.correlationId;this.performanceClient.addQueueMeasurement(ur.SilentIframeClientTokenHelper,r);const n=await wo(this.initializeAuthorizationCodeRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,r)(t),o=await wo(e.getAuthCodeUrl.bind(e),ur.GetAuthCodeUrl,this.logger,this.performanceClient,r)({...t,nativeBroker:sa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),i=new ca(e,this.browserStorage,n,this.logger,this.performanceClient),a=await wo(ga,ur.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,r)(o,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),s=this.config.auth.OIDCOptions.serverResponseType,c=await wo(pa,ur.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(a,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,s),h=vo(ha,ur.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(c,s,this.logger);if(h.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw Dn(On);const e=new aa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,h.accountId,this.browserStorage,r),{userRequestState:n}=Ho.parseRequestState(this.browserCrypto,t.state);return wo(e.acquireToken.bind(e),ur.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,r)({...t,state:n,prompt:t.prompt||y.NONE})}return wo(i.handleCodeResponse.bind(i),ur.HandleCodeResponse,this.logger,this.performanceClient,r)(h,t)}}class wa extends Yi{async acquireToken(e){this.performanceClient.addQueueMeasurement(ur.SilentRefreshClientAcquireToken,e.correlationId);const t=await wo(Qi,ur.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));const n=this.initializeServerTelemetryManager(61),o=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return wo(o.acquireTokenByRefreshToken.bind(o),ur.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(r).catch((e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e}))}logout(){return Promise.reject(Dn(hn))}async createRefreshTokenClient(e){const t=await wo(this.getClientConfiguration.bind(this),ur.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new ra(t,this.performanceClient)}}class Ia{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw Dn(yn);const n=t.id_token?De(t.id_token,to):void 0,o={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.authority?new To(To.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,o,this.logger,e.correlationId||lo()):void 0,a=this.loadAccount(e,r.clientInfo||t.client_info||"",n,i),s=this.loadIdToken(t,a.homeAccountId,a.environment,a.realm),c=this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,r),h=this.loadRefreshToken(t,a.homeAccountId,a.environment);return this.generateAuthenticationResult(e,{account:a,idToken:s,accessToken:c,refreshToken:h},n,i)}loadAccount(e,t,r,n){if(this.logger.verbose("TokenCache - loading account"),e.account){const t=Ft.createFromAccountInfo(e.account);return this.storage.setAccount(t),t}if(!n||!t&&!r)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),Dn(An);const o=Ft.generateHomeAccountId(t,n.authorityType,this.logger,this.cryptoObj,r),i=r?.tid,a=Bi(this.storage,n,o,to,r,t,n.hostnameAndPort,i,void 0,void 0,this.logger);return this.storage.setAccount(a),a}loadIdToken(e,t,r,n){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const o=We(t,r,e.id_token,this.config.auth.clientId,n);return this.storage.setIdTokenCredential(o),o}loadAccessToken(e,t,r,n,o,i){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!(t.scope||e.scopes&&e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");const a=t.scope?Nt.fromString(t.scope):new Nt(e.scopes),s=i.expiresOn||t.expires_in+(new Date).getTime()/1e3,c=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+(new Date).getTime()/1e3,h=je(r,n,t.access_token,this.config.auth.clientId,o,a.printScopes(),s,c,to);return this.storage.setAccessTokenCredential(h),h}loadRefreshToken(e,t,r){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const n=Qe(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(n),n}generateAuthenticationResult(e,t,r,n){let o,i="",a=[],s=null;t?.accessToken&&(i=t.accessToken.secret,a=Nt.fromString(t.accessToken.target).asArray(),s=new Date(1e3*Number(t.accessToken.expiresOn)),o=new Date(1e3*Number(t.accessToken.extendedExpiresOn)));const c=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:a,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:i,fromCache:!0,expiresOn:s,correlationId:e.correlationId||"",requestId:"",extExpiresOn:o,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class Ta extends Fi{constructor(e){super(e),this.includeRedirectUri=!1}}class Aa extends Yi{constructor(e,t,r,n,o,i,a,s,c,h){super(e,t,r,n,o,i,s,c,h),this.apiId=a}async acquireToken(e){if(!e.code)throw Dn(Sn);const t=await wo(this.initializeAuthorizationRequest.bind(this),ur.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,Lr.Silent),r=this.initializeServerTelemetryManager(this.apiId);try{const n={...t,code:e.code},o=await wo(this.getClientConfiguration.bind(this),ur.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),i=new Ta(o);this.logger.verbose("Auth code client created");const a=new ca(i,this.browserStorage,n,this.logger,this.performanceClient);return await wo(a.handleCodeResponseFromServer.bind(a),ur.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(e){throw e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}logout(){return Promise.reject(Dn(hn))}}function ka(e){const t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?"9188040d-6c67-4c5b-b112-36a304b66dad"===t?.tid?"MSA":"AAD":void 0}function Sa(e,t){try{ii(e)}catch(e){throw t.end({success:!1},e),e}}class ba{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new yo(this.logger,this.performanceClient):Ue,this.eventHandler=new Ti(this.logger),this.browserStorage=this.isBrowserEnvironment?new Wo(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,ko(this.config.auth),this.performanceClient):jo(this.config.auth.clientId,this.logger);const t={cacheLocation:Ar,temporaryCacheLocation:Ar,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new Wo(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new Ia(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this),this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}static async createController(e,t){const r=new ba(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");if(!this.isBrowserEnvironment)return this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,void this.eventHandler.emitEvent(ci);const t=e?.correlationId||this.getRequestCorrelationId(),r=this.config.system.allowNativeBroker,n=this.performanceClient.startMeasurement(ur.InitializeClientApplication,t);if(this.eventHandler.emitEvent("msal:initializeStart"),r)try{this.nativeExtensionProvider=await sa.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await wo(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),ur.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(ci),n.end({allowNativeBroker:r,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),oi(this.initialized),this.isBrowserEnvironment){const t=e||"";let r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){const t=this.getAllAccounts(),r=this.browserStorage.getCachedNativeRequest(),n=r&&sa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,o=n?r?.correlationId:this.browserStorage.getTemporaryCache(Pr,!0)||"",i=this.performanceClient.startMeasurement(ur.AcquireTokenRedirect,o);let a;if(this.eventHandler.emitEvent("msal:handleRedirectStart",Lr.Redirect),n&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const e=new aa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,865,this.performanceClient,this.nativeExtensionProvider,r.accountId,this.nativeInternalStorage,r.correlationId);a=wo(e.handleRedirectPromise.bind(e),ur.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(this.performanceClient,i.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const t=this.createRedirectClient(o);a=wo(t.handleRedirectPromise.bind(t),ur.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(e,i)}return a.then((e=>(e?(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(li,Lr.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(gi,Lr.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),i.end({success:!0,accountType:ka(e.account)})):i.event.errorCode?i.end({success:!1}):i.discard(),this.eventHandler.emitEvent(fi,Lr.Redirect),e))).catch((e=>{const r=e;throw t.length>0?this.eventHandler.emitEvent(pi,Lr.Redirect,null,r):this.eventHandler.emitEvent(di,Lr.Redirect,null,r),this.eventHandler.emitEvent(fi,Lr.Redirect),i.end({success:!1},r),e}))}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const r=this.performanceClient.startMeasurement(ur.AcquireTokenPreRedirect,t);r.add({accountType:ka(e.account),scenarioId:e.scenarioId});const n=e.onRedirectNavigate;if(n)e.onRedirectNavigate=e=>{const t="function"==typeof n?n(e):void 0;return!1!==t?r.end({success:!0}):r.discard(),t};else{const e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{const n="function"==typeof e?e(t):void 0;return!1!==n?r.end({success:!0}):r.discard(),n}}const o=this.getAllAccounts().length>0;try{let n;return ai(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),o?this.eventHandler.emitEvent(ui,Lr.Redirect,e):this.eventHandler.emitEvent(hi,Lr.Redirect,e),n=this.nativeExtensionProvider&&this.canUseNative(e)?new aa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,xr,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,r).catch((r=>{if(r instanceof Zi&&ea(r))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(r instanceof Oo)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r})):this.createRedirectClient(t).acquireToken(e),await n}catch(e){throw r.end({success:!1},e),o?this.eventHandler.emitEvent(pi,Lr.Redirect,null,e):this.eventHandler.emitEvent(di,Lr.Redirect,null,e),e}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(ur.AcquireTokenPopup,t);r.add({scenarioId:e.scenarioId,accountType:ka(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),Sa(this.initialized,r),this.browserStorage.setInteractionInProgress(!0)}catch(e){return Promise.reject(e)}const n=this.getAllAccounts();let o;return n.length>0?this.eventHandler.emitEvent(ui,Lr.Popup,e):this.eventHandler.emitEvent(hi,Lr.Popup,e),o=this.canUseNative(e)?this.acquireTokenNative({...e,correlationId:t},Ur).then((e=>(this.browserStorage.setInteractionInProgress(!1),r.end({success:!0,isNativeBroker:!0,requestId:e.requestId,accountType:ka(e.account)}),e))).catch((r=>{if(r instanceof Zi&&ea(r))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(r instanceof Oo)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r})):this.createPopupClient(t).acquireToken(e),o.then((e=>(n.length<this.getAllAccounts().length?this.eventHandler.emitEvent(li,Lr.Popup,e):this.eventHandler.emitEvent(gi,Lr.Popup,e),r.end({success:!0,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:ka(e.account)}),e))).catch((e=>(n.length>0?this.eventHandler.emitEvent(pi,Lr.Popup,null,e):this.eventHandler.emitEvent(di,Lr.Popup,null,e),r.end({success:!1},e),Promise.reject(e))))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),r={...e,prompt:e.prompt,correlationId:t};let n;return this.ssoSilentMeasurement=this.performanceClient.startMeasurement(ur.SsoSilent,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:ka(e.account)}),Sa(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent("msal:ssoSilentStart",Lr.Silent,r),n=this.canUseNative(r)?this.acquireTokenNative(r,863).catch((e=>{if(e instanceof Zi&&ea(e))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(r.correlationId).acquireToken(r);throw e})):this.createSilentIframeClient(r.correlationId).acquireToken(r),n.then((e=>(this.eventHandler.emitEvent("msal:ssoSilentSuccess",Lr.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:ka(e.account)}),e))).catch((e=>{throw this.eventHandler.emitEvent("msal:ssoSilentFailure",Lr.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const r=this.performanceClient.startMeasurement(ur.AcquireTokenByCode,t);Sa(this.initialized,r),this.eventHandler.emitEvent("msal:acquireTokenByCodeStart",Lr.Silent,e),r.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw Dn(Rn);if(e.code){const n=e.code;let o=this.hybridAuthCodeResponses.get(n);return o?(this.logger.verbose("Existing acquireTokenByCode request found",t),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),o=this.acquireTokenByCodeAsync({...e,correlationId:t}).then((e=>(this.eventHandler.emitEvent("msal:acquireTokenByCodeSuccess",Lr.Silent,e),this.hybridAuthCodeResponses.delete(n),r.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:ka(e.account)}),e))).catch((e=>{throw this.hybridAuthCodeResponses.delete(n),this.eventHandler.emitEvent(mi,Lr.Silent,null,e),r.end({success:!1},e),e})),this.hybridAuthCodeResponses.set(n,o)),await o}if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId)){const n=await this.acquireTokenNative({...e,correlationId:t},866,e.nativeAccountId).catch((e=>{throw e instanceof Zi&&ea(e)&&(this.nativeExtensionProvider=void 0),e}));return r.end({accountType:ka(n.account),success:!0}),n}throw Dn(_n)}throw Dn(bn)}catch(e){throw this.eventHandler.emitEvent(mi,Lr.Silent,null,e),r.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(ur.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then((e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,requestId:e.requestId}),e))).catch((e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(ur.AcquireTokenFromCache,e.correlationId),t){case 0:case 1:case 2:const t=this.createSilentCacheClient(e.correlationId);return wo(t.acquireToken.bind(t),ur.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw xe(Te)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(ur.AcquireTokenByRefreshToken,e.correlationId),t){case 0:case 2:case 3:case 4:const t=this.createSilentRefreshClient(e.correlationId);return wo(t.acquireToken.bind(t),ur.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw xe(Te)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(ur.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return wo(t.acquireToken.bind(t),ur.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return ai(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return ii(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(e){return Promise.reject(e)}}async clearCache(e){if(!this.isBrowserEnvironment)return void this.logger.info("in non-browser environment, returning early.");const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return Qo(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return Vo(e,this.logger,this.browserStorage)}getAccountByUsername(e){return Yo(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return Jo(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return Xo(e,this.logger,this.browserStorage)}setActiveAccount(e){Zo(e,this.browserStorage)}getActiveAccount(){return ei(this.browserStorage)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=Ft.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(r),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw Dn(On);return new aa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!sa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case y.NONE:case y.CONSENT:case y.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e)&&(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),1))}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new la(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new ua(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new va(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,863,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new oa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new wa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new Aa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,866,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return ni(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}handleAccountCacheChange(e){try{e.key?.includes(u)&&this.eventHandler.emitEvent("msal:activeAccountChanged");const t=e.newValue||e.oldValue;if(!t)return;const r=JSON.parse(t);if("object"!=typeof r||!Ft.isAccountEntity(r))return;const n=er.toObject(new Ft,r).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.eventHandler.emitEvent("msal:accountAdded",void 0,n)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.eventHandler.emitEvent("msal:accountRemoved",void 0,n))}catch(e){return}}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(t){return t?.correlationId?t.correlationId:this.isBrowserEnvironment?lo():e.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||Br})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||Br})}async acquireTokenSilent(t){const r=this.getRequestCorrelationId(t),n=this.performanceClient.startMeasurement(ur.AcquireTokenSilent,r);n.add({cacheLookupPolicy:t.cacheLookupPolicy,scenarioId:t.scenarioId}),Sa(this.initialized,n),this.logger.verbose("acquireTokenSilent called",r);const o=t.account||this.getActiveAccount();if(!o)throw Dn(ln);n.add({accountType:ka(o)});const i={clientId:this.config.auth.clientId,authority:t.authority||e.EMPTY_STRING,scopes:t.scopes,homeAccountIdentifier:o.homeAccountId,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid,shrOptions:t.shrOptions},a=JSON.stringify(i),s=this.activeSilentTokenRequests.get(a);if(void 0===s){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",r);const e=wo(this.acquireTokenSilentAsync.bind(this),ur.AcquireTokenSilentAsync,this.logger,this.performanceClient,r)({...t,correlationId:r},o).then((e=>(this.activeSilentTokenRequests.delete(a),n.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,cacheLookupPolicy:t.cacheLookupPolicy,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length}),e))).catch((e=>{throw this.activeSilentTokenRequests.delete(a),n.end({success:!1},e),e}));return this.activeSilentTokenRequests.set(a,e),{...await e,state:t.state}}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",r),n.discard(),{...await s,state:t.state}}async acquireTokenSilentAsync(e,t){const r=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(ur.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(ui,Lr.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",r);const n=await wo(Vi,ur.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),o=e.cacheLookupPolicy||0;return this.acquireTokenSilentNoIframe(n,o).catch((async e=>{const t=function(e,t){const r=!(e instanceof Oo&&e.subError!==Eo),n=e.errorCode===fr.INVALID_GRANT_ERROR||e.errorCode===Te,o=r&&n||e.errorCode===So||e.errorCode===Ro,i=Kr.includes(t);return o&&i}(e,o);if(t){if(this.activeIframeRequest){if(5!==o){const[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,n.correlationId);const i=this.performanceClient.startMeasurement(ur.AwaitConcurrentIframe,n.correlationId);i.add({awaitIframeCorrelationId:r});const a=await t;if(i.end({success:a}),a)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,n.correlationId),this.acquireTokenSilentNoIframe(n,o);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",n.correlationId),wo(this.acquireTokenBySilentIframe.bind(this),ur.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n)}{let e;return this.activeIframeRequest=[new Promise((t=>{e=t})),n.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",n.correlationId),wo(this.acquireTokenBySilentIframe.bind(this),ur.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n).then((t=>(e(!0),t))).catch((t=>{throw e(!1),t})).finally((()=>{this.activeIframeRequest=void 0}))}}throw e})).then((t=>(this.eventHandler.emitEvent(gi,Lr.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,requestId:t.requestId},e.correlationId),t))).catch((e=>{throw this.eventHandler.emitEvent(pi,Lr.Silent,null,e),e})).finally((()=>{document.removeEventListener("visibilitychange",r)}))}async acquireTokenSilentNoIframe(e,t){return sa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,61).catch((async e=>{if(e instanceof Zi&&ea(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,xe(Te);throw e}))):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),wo(this.acquireTokenFromCache.bind(this),ur.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch((r=>{if(1===t)throw r;return this.eventHandler.emitEvent("msal:acquireTokenFromNetworkStart",Lr.Silent,e),wo(this.acquireTokenByRefreshToken.bind(this),ur.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)})))}}const Ra="NESTED_APP_AUTH_UNAVAILABLE";class Ea{constructor(e,t,r,n){this.clientId=e,this.clientCapabilities=t,this.crypto=r,this.logger=n}toNaaTokenRequest(e){let r;r=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));const n=(new qi).addClientCapabilitiesToClaims(e.claims,this.clientCapabilities),o=e.scopes||t;return{platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:o.join(" "),correlationId:void 0!==e.correlationId?e.correlationId:this.crypto.createNewGuid(),claims:qt.isEmptyObj(n)?void 0:n,state:e.state,authenticationScheme:e.authenticationScheme||O.BEARER,extraParameters:r}}fromNaaTokenResponse(e,t,r){if(!t.token.id_token||!t.token.access_token)throw xe(j);const n=new Date(1e3*(r+(t.token.expires_in||0))),o=De(t.token.id_token,this.crypto.base64Decode),i=this.fromNaaAccountInfo(t.account,t.token.id_token,o),a=t.token.scope||e.scope;return{authority:t.token.authority||i.environment,uniqueId:i.localAccountId,tenantId:i.tenantId,scopes:a.split(" "),account:i,idToken:t.token.id_token,idTokenClaims:o,accessToken:t.token.access_token,fromCache:!1,expiresOn:n,tokenType:e.authenticationScheme||O.BEARER,correlationId:e.correlationId,extExpiresOn:n,state:e.state}}fromNaaAccountInfo(e,t,r){const n=r||e.idTokenClaims,o=e.localAccountId||n?.oid||n?.sub||"",i=e.tenantId||n?.tid||"",a=e.homeAccountId||`${o}.${i}`,s=e.username||n?.preferred_username||"",c=e.name||n?.name,h=new Map,l=Lt(a,o,i,n);return h.set(i,l),{homeAccountId:a,environment:e.environment,tenantId:i,username:s,localAccountId:o,name:c,idToken:t,idTokenClaims:n,tenantProfiles:h}}fromBridgeError(e){if(!function(e){return void 0!==e.status}(e))return new K("unknown_error","An unknown error occurred");switch(e.status){case"USER_CANCEL":return new He(Pe);case"NO_NETWORK":return new He(_e);case"ACCOUNT_UNAVAILABLE":return new He(ye);case"DISABLED":return new He(qe);case Ra:return new He(e.code||qe,e.description);case"TRANSIENT_ERROR":case"PERSISTENT_ERROR":return new Ai(e.code,e.description);case"USER_INTERACTION_REQUIRED":return new Oo(e.code,e.description);default:return new K(e.code,e.description)}}toAuthenticationResultFromCache(e,t,r,n,o){if(!t||!r)throw xe(j);const i=De(t.secret,this.crypto.base64Decode),a=r.target||n.scopes.join(" ");return{authority:r.environment||e.environment,uniqueId:e.localAccountId,tenantId:e.tenantId,scopes:a.split(" "),account:e,idToken:t.secret,idTokenClaims:i||{},accessToken:r.secret,fromCache:!0,expiresOn:new Date(1e3*Number(r.expiresOn)),tokenType:n.authenticationScheme||O.BEARER,correlationId:o,extExpiresOn:new Date(1e3*Number(r.extendedExpiresOn)),state:n.state}}}const _a="unsupported_method",Pa="This method is not supported in nested app environment.";class Ma extends K{constructor(e,t){super(e,t),Object.setPrototypeOf(this,Ma.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new Ma(_a,Pa)}}class Oa{constructor(e){this.operatingContext=e;const t=this.operatingContext.getBridgeProxy();if(void 0===t)throw new Error("unexpected: bridgeProxy is undefined");this.bridgeProxy=t,this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new yo(this.logger,this.performanceClient):Ue,this.browserStorage=this.operatingContext.isBrowserEnvironment()?new Wo(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,ko(this.config.auth)):jo(this.config.auth.clientId,this.logger),this.eventHandler=new Ti(this.logger),this.nestedAppAuthAdapter=new Ea(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger);const r=this.bridgeProxy.getAccountContext();r&&Zo(Vo(r,this.logger,this.browserStorage),this.browserStorage)}static async createController(e){const t=new Oa(e);return Promise.resolve(t)}initialize(){return Promise.resolve()}ensureValidRequest(e){return e?.correlationId?e:{...e,correlationId:this.browserCrypto.createNewGuid()}}async acquireTokenInteractive(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(ui,Lr.Popup,t);const r=this.performanceClient.startMeasurement(ur.AcquireTokenPopup,t.correlationId);r?.add({nestedAppAuthRequest:!0});try{const n=this.nestedAppAuthAdapter.toNaaTokenRequest(t),o=Ke(),i=await this.bridgeProxy.getTokenInteractive(n),a={...this.nestedAppAuthAdapter.fromNaaTokenResponse(n,i,o)};return await this.hydrateCache(a,e),this.browserStorage.setActiveAccount(a.account),this.eventHandler.emitEvent(gi,Lr.Popup,a),r.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),r.end({success:!0,requestId:a.requestId}),a}catch(e){const t=this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(pi,Lr.Popup,null,e),r.end({success:!1},e),t}}async acquireTokenSilentInternal(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(ui,Lr.Silent,t);const r=await this.acquireTokenFromCache(t);if(r)return this.eventHandler.emitEvent(gi,Lr.Silent,r),r;const n=this.performanceClient.startMeasurement(ur.SsoSilent,t.correlationId);n?.increment({visibilityChangeCount:0}),n?.add({nestedAppAuthRequest:!0});try{const r=this.nestedAppAuthAdapter.toNaaTokenRequest(t),o=Ke(),i=await this.bridgeProxy.getTokenSilent(r),a=this.nestedAppAuthAdapter.fromNaaTokenResponse(r,i,o);return await this.hydrateCache(a,e),this.browserStorage.setActiveAccount(a.account),this.eventHandler.emitEvent(gi,Lr.Silent,a),n?.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),n?.end({success:!0,requestId:a.requestId}),a}catch(e){const t=this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(pi,Lr.Silent,null,e),n?.end({success:!1},e),t}}async acquireTokenFromCache(e){const t=this.performanceClient.startMeasurement(ur.AcquireTokenSilent,e.correlationId);if(t?.add({nestedAppAuthRequest:!0}),e.claims)return this.logger.verbose("Claims are present in the request, skipping cache lookup"),null;let r=null;switch(e.cacheLookupPolicy){case 0:case 1:case 2:r=await this.acquireTokenFromCacheInternal(e);break;default:return null}return r?(this.eventHandler.emitEvent(gi,Lr.Silent,r),t?.add({accessTokenSize:r?.accessToken.length,idTokenSize:r?.idToken.length}),t?.end({success:!0}),r):(this.logger.error("Cached tokens are not found for the account, proceeding with silent token request."),this.eventHandler.emitEvent(pi,Lr.Silent,null),t?.end({success:!1}),null)}async acquireTokenFromCacheInternal(e){const r=this.bridgeProxy.getAccountContext();let n=null;if(r&&(n=Vo(r,this.logger,this.browserStorage)||e.account),!n)return this.logger.verbose("No active account found, falling back to the host"),Promise.resolve(null);this.logger.verbose("active account found, attempting to acquire token silently");const o={...e,correlationId:e.correlationId||this.browserCrypto.createNewGuid(),authority:e.authority||n.environment,scopes:e.scopes?.length?e.scopes:[...t]},i=this.browserStorage.getTokenKeys(),a=this.browserStorage.getAccessToken(n,o,i,n.tenantId,this.performanceClient,o.correlationId);if(!a)return this.logger.verbose("No cached access token found"),Promise.resolve(null);if($e(a.cachedAt)||ze(a.expiresOn,this.config.system.tokenRenewalOffsetSeconds))return this.logger.verbose("Cached access token has expired"),Promise.resolve(null);const s=this.browserStorage.getIdToken(n,i,n.tenantId,this.performanceClient,o.correlationId);return s?this.nestedAppAuthAdapter.toAuthenticationResultFromCache(n,s,a,o,o.correlationId):(this.logger.verbose("No cached id token found"),Promise.resolve(null))}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw Ma.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw Ma.createUnsupportedError()}acquireTokenNative(e,t,r){throw Ma.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw Ma.createUnsupportedError()}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw Ma.createUnsupportedError()}removePerformanceCallback(e){throw Ma.createUnsupportedError()}enableAccountStorageEvents(){throw Ma.createUnsupportedError()}disableAccountStorageEvents(){throw Ma.createUnsupportedError()}getAllAccounts(e){return Qo(this.logger,this.browserStorage,this.isBrowserEnv(),e)}getAccount(e){return Vo(e,this.logger,this.browserStorage)}getAccountByUsername(e){return Yo(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return Jo(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return Xo(e,this.logger,this.browserStorage)}setActiveAccount(e){return Zo(e,this.browserStorage)}getActiveAccount(){return ei(this.browserStorage)}handleRedirectPromise(e){return Promise.resolve(null)}loginPopup(e){return this.acquireTokenInteractive(e||Br)}loginRedirect(e){throw Ma.createUnsupportedError()}logout(e){throw Ma.createUnsupportedError()}logoutRedirect(e){throw Ma.createUnsupportedError()}logoutPopup(e){throw Ma.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw Ma.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw Ma.createUnsupportedError()}getRedirectResponse(){throw Ma.createUnsupportedError()}async clearCache(e){throw Ma.createUnsupportedError()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=Ft.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(r),this.browserStorage.hydrateCache(e,t)}}class qa{static async initializeNestedAppAuthBridge(){if(void 0===window)throw new Error("window is undefined");if(void 0===window.nestedAppAuthBridge)throw new Error("window.nestedAppAuthBridge is undefined");try{window.nestedAppAuthBridge.addEventListener("message",(e=>{const t="string"==typeof e?e:e.data,r=JSON.parse(t),n=qa.bridgeRequests.find((e=>e.requestId===r.requestId));void 0!==n&&(qa.bridgeRequests.splice(qa.bridgeRequests.indexOf(n),1),r.success?n.resolve(r):n.reject(r.error))}));const e=await new Promise(((e,t)=>{const r=qa.buildRequest("GetInitContext"),n={requestId:r.requestId,method:r.method,resolve:e,reject:t};qa.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))}));return qa.validateBridgeResultOrThrow(e.initContext)}catch(e){throw window.console.log(e),e}}getTokenInteractive(e){return this.getToken("GetTokenPopup",e)}getTokenSilent(e){return this.getToken("GetToken",e)}async getToken(e,t){const r=await this.sendRequest(e,{tokenParams:t});return{token:qa.validateBridgeResultOrThrow(r.token),account:qa.validateBridgeResultOrThrow(r.account)}}getHostCapabilities(){return this.capabilities??null}getAccountContext(){return this.accountContext?this.accountContext:null}static buildRequest(e,t){return{messageType:"NestedAppAuthRequest",method:e,requestId:lo(),sendTime:Date.now(),clientLibrary:fr.MSAL_SKU,clientLibraryVersion:Kn,...t}}sendRequest(e,t){const r=qa.buildRequest(e,t);return new Promise(((e,t)=>{const n={requestId:r.requestId,method:r.method,resolve:e,reject:t};qa.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))}))}static validateBridgeResultOrThrow(e){if(void 0===e)throw{status:Ra};return e}constructor(e,t,r,n){this.sdkName=e,this.sdkVersion=t,this.accountContext=r,this.capabilities=n}static async create(){const e=await qa.initializeNestedAppAuthBridge();return new qa(e.sdkName,e.sdkVersion,e.accountContext,e.capabilities)}}qa.bridgeRequests=[];class Na extends zn{constructor(){super(...arguments),this.bridgeProxy=void 0,this.accountContext=null}getModuleName(){return Na.MODULE_NAME}getId(){return Na.ID}getBridgeProxy(){return this.bridgeProxy}async initialize(){try{if("undefined"!=typeof window){"function"==typeof window.__initializeNestedAppAuth&&await window.__initializeNestedAppAuth();const e=await qa.create();this.accountContext=e.getAccountContext(),this.bridgeProxy=e,this.available=void 0!==e}}catch(e){this.logger.infoPii(`Could not initialize Nested App Auth bridge (${e})`)}return this.logger.info(`Nested App Auth Bridge available: ${this.available}`),this.available}}Na.MODULE_NAME="",Na.ID="NestedAppOperatingContext";class Ha{static async createPublicClientApplication(e){const t=await async function(e){const t=new $n(e);return await t.initialize(),ba.createController(t,void 0)}(e);return new Ha(e,t)}constructor(e,t){this.controller=t||new ba(new $n(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}function xa(e){return`${window.location.origin}/${e}`}const Ua={auth:{clientId:"245da59c-6466-4c86-b989-e7608c282e5e",redirectUri:xa("auth.html"),postLogoutRedirectUri:xa("auth.html")},cache:{cacheLocation:"localStorage"},system:{loggerOptions:{logLevel:N.Verbose,loggerCallback:(e,t)=>{switch(e){case N.Error:return void console.error(t);case N.Info:return void console.info(t);case N.Verbose:return void console.debug(t);case N.Warning:return void console.warn(t)}},piiLoggingEnabled:!0}}};function La(e,t,r){let n={};return t&&(n={prompt:"select_account"}),r&&(n.redirectUri=r),{scopes:e,...n}}async function Ba(e,t,r){if(!t)throw new Error("path is required.");if(!t.startsWith("/"))throw new Error("path must start with '/'.");if(r&&!r.startsWith("?"))throw new Error("queryParams must start with '?'.");const n=await fetch(`https://graph.microsoft.com/v1.0${t}${r}`,{headers:{Authorization:e}});if(n.ok){const e=await n.json();return console.log(e),e}throw new Error(n.statusText)}const Da=new class{pca=void 0;_dialogApiResult=null;_usingFallbackDialog=!1;getSignOutButton(){return document.getElementById("signOutButton")}setSignOutButtonVisibility(e){const t=this.getSignOutButton();t&&(t.style.visibility=e?"visible":"hidden")}isNestedAppAuthSupported(){return Office.context.requirements.isSetSupported("NestedAppAuth","1.1")}async initialize(){await Office.onReady(),this.pca=await async function(e){const t=new Na(e);if(await t.initialize(),t.isAvailable()){const r=new Oa(t);return new Ha(e,r)}return async function(e){const t=new Ha(e);return await t.initialize(),t}(e)}(Ua),!this.isNestedAppAuthSupported()&&this.pca.getActiveAccount()&&this.setSignOutButtonVisibility(!0),this.getSignOutButton()?.addEventListener("click",(()=>this.signOut()))}async signOut(){this._usingFallbackDialog?await this.signOutWithDialogApi():await(this.pca?.logoutPopup()),this.setSignOutButtonVisibility(!1)}async ssoGetAccessToken(e){if(this._dialogApiResult)return this._dialogApiResult;if(void 0===this.pca)throw new Error("AccountManager is not initialized!");try{console.log("Trying to acquire token silently...");const t=await this.pca.acquireTokenSilent(La(e,!1));return console.log("Acquired token silently."),t.accessToken}catch(e){console.warn(`Unable to acquire token silently: ${e}`)}try{console.log("Trying to acquire token interactively...");const t=!this.pca.getActiveAccount(),r=await this.pca.acquireTokenPopup(La(e,t));return console.log("Acquired token interactively."),t&&this.pca.setActiveAccount(r.account),this.isNestedAppAuthSupported()||this.setSignOutButtonVisibility(!0),r.accessToken}catch(e){if(e instanceof Bn&&"popup_window_error"===e.errorCode)return await this.getTokenWithDialogApi();throw console.error(`Unable to acquire token interactively: ${e}`),new Error(`Unable to acquire access token: ${e}`)}}async getTokenWithDialogApi(){return this._dialogApiResult=new Promise(((e,t)=>{Office.context.ui.displayDialogAsync(xa("dialog.html"),{height:60,width:30},(r=>{r.value.addEventHandler(Office.EventType.DialogEventReceived,(e=>{12006==e.error&&(this._dialogApiResult=null,t("Dialog closed"))})),r.value.addEventHandler(Office.EventType.DialogMessageReceived,(n=>{const o=n,i=JSON.parse(o.message);r.value.close(),i.error?(t(i.error),this._dialogApiResult=null):(e(i.accessToken),this.setSignOutButtonVisibility(!0),this._usingFallbackDialog=!0)}))}))})),this._dialogApiResult}signOutWithDialogApi(){return new Promise((e=>{Office.context.ui.displayDialogAsync(xa("dialog.html?logout=1"),{height:60,width:30},(t=>{t.value.addEventHandler(Office.EventType.DialogMessageReceived,(()=>{this.setSignOutButtonVisibility(!1),this._dialogApiResult=null,e(),t.value.close()}))}))}))}},Fa=document.getElementById("sideload-msg"),Ka=document.getElementById("app-body"),za=document.getElementById("getUserData"),$a=document.getElementById("getUserFiles"),Ga=document.getElementById("userName"),Wa=document.getElementById("userEmail");async function ja(){const e=document.getElementById("userData"),t=await Da.ssoGetAccessToken(["user.read"]),r=await Ba(t,"/me","");e&&(e.style.visibility="visible"),Ga&&(Ga.innerText=r.displayName??""),Wa&&(Wa.innerText=r.mail??"")}async function Qa(){try{!async function(e){const t=Office.context.mailbox.item;let r="";e.map((e=>r+="<br/>"+e)),t&&t.body.setAsync(r,{coercionType:"html"})}(await async function(e=10){const t=await Da.ssoGetAccessToken(["Files.Read"]);return(await Ba(t,"/me/drive/root/children",`?$select=name&$top=${e}`)).value.map((e=>e.name))}(10))}catch(e){console.error(e)}}Office.onReady((e=>{e.host===Office.HostType.Outlook&&(Fa&&(Fa.style.display="none"),Ka&&(Ka.style.display="flex"),za&&za.addEventListener("click",ja),$a&&$a.addEventListener("click",Qa),Da.initialize())}))}(),new URL(r(81499),r.b),new URL(r(58394),r.b),new URL(r(98362),r.b)}();
//# sourceMappingURL=taskpane.js.map